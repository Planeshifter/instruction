!function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require){(function(global){"use struct";global.compute=require("compute.io"),global.matrix=require("dstructs-matrix");var createGlobals=require("./createGlobals.js");createGlobals(global.compute)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./createGlobals.js":2,"compute.io":8,"dstructs-matrix":338}],2:[function(require,module){"use strict";function createGlobals(obj){var keys,i;for(keys=Object.keys(obj),i=0;i<keys.length;i++)window[keys[i]]=obj[keys[i]]}module.exports=createGlobals},{}],3:[function(require,module){"use strict";function linspace(x1,x2,len){var arr,end,tmp,d;if("number"!=typeof x1||x1!==x1)throw new TypeError("linspace()::invalid input argument. Start must be numeric.");if("number"!=typeof x2||x2!==x2)throw new TypeError("linspace()::invalid input argument. Stop must be numeric.");if(arguments.length<3)len=100;else{if(!isInteger(len)||0>len)throw new TypeError("linspace()::invalid input argument. Length must be a positive integer.");if(0===len)return[]}end=len-1,d=(x2-x1)/end,arr=new Array(len),tmp=x1,arr[0]=tmp;for(var i=1;end>i;i++)tmp+=d,arr[i]=tmp;return arr[end]=x2,arr}var isInteger=require("validate.io-integer");module.exports=linspace},{"validate.io-integer":4}],4:[function(require,module){"use strict";function isInteger(value){return isNumber(value)&&value%1===0}var isNumber=require("validate.io-number");module.exports=isInteger},{"validate.io-number":5}],5:[function(require,module){"use strict";function isNumber(value){return("number"==typeof value||"[object Number]"===Object.prototype.toString.call(value))&&value.valueOf()===value.valueOf()}module.exports=isNumber},{}],6:[function(require,module){"use strict";function roundn(x,n){var scalar,len,isArray=Array.isArray(x);if(!isArray&&("number"!=typeof x||x!==x))throw new TypeError("roundn()::invalid input argument. Must provide either a single numeric value or a numeric array.");if("number"!=typeof n||n!==n||n!==(0|n))throw new TypeError("roundn()::invalid input argument. Power of 10 must be an integer value.");if(n=-n,scalar=Math.pow(10,n),!isArray)return Math.round(x*scalar)/scalar;if(len=x.length,!len)return null;for(var i=0;len>i;i++)x[i]=Math.round(x[i]*scalar)/scalar;return x}module.exports=roundn},{}],7:[function(require,module){"use strict";function Flow(){return this instanceof Flow?(this._value=null,this):new Flow}function createMethod(name,func){Flow.prototype[name]=function(){var args=Array.prototype.slice.call(arguments);return args.unshift(this._value),this._value=func.apply(null,args),this}}function createFlow(compute){var method,methods=Object.keys(compute);methods.filter(function(method){return"function"==typeof compute[method]});for(var i=0;i<methods.length;i++)method=methods[i],createMethod(method,compute[method]);return Flow}Flow.prototype.value=function(value){return arguments.length?(this._value=value,this):this._value},Flow.prototype.inspect=function(){return console.log(this._value),this},module.exports=createFlow},{}],8:[function(require,module){"use strict";var createFlow=require("./flow.js"),compute={};compute.polyval=require("compute-polynomial"),compute.find=require("compute-find"),compute.dims=require("compute-dims"),compute.issorted=require("compute-issorted"),compute.flatten=require("compute-flatten"),compute.linspace=require("compute-linspace"),compute.incrspace=require("compute-incrspace"),compute.indexspace=require("compute-indexspace"),compute.logspace=require("compute-logspace"),compute.datespace=require("compute-datespace"),compute.incrdatespace=require("compute-incrdatespace"),compute.zip=require("compute-zip"),compute.unzip=require("compute-unzip"),compute.reverse=require("compute-reverse"),compute.shuffle=require("compute-shuffle"),compute.circshift=require("compute-circshift"),compute.abs=require("compute-abs"),compute.sqrt=require("compute-sqrt"),compute.signum=require("compute-signum"),compute.erf=require("compute-erf"),compute.erfc=require("compute-erfc"),compute.erfinv=require("compute-erfinv"),compute.erfcinv=require("compute-erfcinv"),compute.add=require("compute-add"),compute.subtract=require("compute-subtract"),compute.multiply=require("compute-multiply"),compute.divide=require("compute-divide"),compute.roundn=require("compute-roundn"),compute.diff=require("compute-diff"),compute.eq=require("compute-eq"),compute.neq=require("compute-neq"),compute.gt=require("compute-gt"),compute.geq=require("compute-geq"),compute.lt=require("compute-lt"),compute.leq=require("compute-leq"),compute.isnumeric=require("compute-isnumeric"),compute.isnan=require("compute-isnan"),compute.isfinite=require("compute-isfinite"),compute.isinteger=require("compute-isinteger"),compute.isinf=require("compute-isinf"),compute.deg2rad=require("compute-deg2rad"),compute.rad2deg=require("compute-rad2deg"),compute.hypot=require("compute-hypot"),compute.unique=require("compute-unique"),compute.gcd=require("compute-gcd"),compute.lcm=require("compute-lcm"),compute.l1norm=require("compute-l1norm"),compute.l2norm=require("compute-l2norm"),compute.linfnorm=require("compute-linfnorm"),compute.lpnorm=require("compute-lpnorm"),compute.dot=require("compute-dot"),compute.cross=require("compute-cross"),compute.min=require("compute-min"),compute.argmin=require("compute-argmin"),compute.nanmin=require("compute-nanmin"),compute.argnanmin=require("compute-argnanmin"),compute.incrmin=require("compute-incrmin"),compute.mmin=require("compute-mmin"),compute.cmin=require("compute-cmin"),compute.max=require("compute-max"),compute.argmax=require("compute-argmax"),compute.nanmax=require("compute-nanmax"),compute.argnanmax=require("compute-argnanmax"),compute.incrmax=require("compute-incrmax"),compute.mmax=require("compute-mmax"),compute.cmax=require("compute-cmax"),compute.range=require("compute-range"),compute.nanrange=require("compute-nanrange"),compute.sum=require("compute-sum"),compute.nansum=require("compute-nansum"),compute.incrsum=require("compute-incrsum"),compute.msum=require("compute-msum"),compute.incrmsum=require("compute-incrmsum"),compute.csum=require("compute-csum"),compute.prod=require("compute-prod"),compute.nanprod=require("compute-nanprod"),compute.mprod=require("compute-mprod"),compute.cprod=require("compute-cprod"),compute.mean=require("compute-mean"),compute.nanmean=require("compute-nanmean"),compute.incrmean=require("compute-incrmean"),compute.mmean=require("compute-mmean"),compute.incrmmean=require("compute-incrmmean"),compute.wmean=require("compute-wmean"),compute.gmean=require("compute-gmean"),compute.nangmean=require("compute-nangmean"),compute.hmean=require("compute-hmean"),compute.nanhmean=require("compute-nanhmean"),compute.qmean=require("compute-qmean"),compute.nanqmean=require("compute-nanqmean"),compute.variance=require("compute-variance"),compute.nanvariance=require("compute-nanvariance"),compute.incrvariance=require("compute-incrvariance"),compute.mvariance=require("compute-mvariance"),compute.incrmvariance=require("compute-incrmvariance"),compute.stdev=require("compute-stdev"),compute.nanstdev=require("compute-nanstdev"),compute.incrstdev=require("compute-incrstdev"),compute.mstdev=require("compute-mstdev"),compute.incrmstdev=require("compute-incrmstdev"),compute.mode=require("compute-mode"),compute.median=require("compute-median"),compute.nanmedian=require("compute-nanmedian"),compute.quantile=require("compute-quantile"),compute.quantiles=require("compute-quantiles"),compute.nanquantiles=require("compute-nanquantiles"),compute.iqr=require("compute-iqr"),compute.idr=require("compute-idr"),compute.midrange=require("compute-midrange"),compute.midhinge=require("compute-midhinge"),compute.midsummary=require("compute-midsummary"),compute.midmean=require("compute-midmean"),compute.lmidmean=require("compute-lmidmean"),compute.umidmean=require("compute-umidmean"),compute.truncmean=require("compute-truncmean"),compute.trimean=require("compute-trimean"),compute.skewness=require("compute-skewness"),compute.kurtosis=require("compute-kurtosis"),compute.covariance=require("compute-covariance"),compute.pcorr=require("compute-pcorr"),compute.hamdist=require("compute-hamming"),compute.tversky=require("compute-tversky-index"),compute.flow=createFlow(compute),module.exports=compute},{"./flow.js":7,"compute-abs":9,"compute-add":10,"compute-argmax":11,"compute-argmin":12,"compute-argnanmax":13,"compute-argnanmin":14,"compute-circshift":15,"compute-cmax":18,"compute-cmin":19,"compute-covariance":20,"compute-cprod":23,"compute-cross":28,"compute-csum":29,"compute-datespace":30,"compute-deg2rad":35,"compute-diff":36,"compute-dims":37,"compute-divide":40,"compute-dot":41,"compute-eq":44,"compute-erf":47,"compute-erfc":48,"compute-erfcinv":49,"compute-erfinv":50,"compute-find":51,"compute-flatten":56,"compute-gcd":70,"compute-geq":76,"compute-gmean":83,"compute-gt":86,"compute-hamming":93,"compute-hmean":97,"compute-hypot":98,"compute-idr":100,"compute-incrdatespace":103,"compute-incrmax":106,"compute-incrmean":107,"compute-incrmin":108,"compute-incrmmean":109,"compute-incrmstdev":113,"compute-incrmsum":117,"compute-incrmvariance":121,"compute-incrspace":125,"compute-incrstdev":127,"compute-incrsum":128,"compute-incrvariance":129,"compute-indexspace":130,"compute-iqr":135,"compute-isfinite":138,"compute-isinf":139,"compute-isinteger":140,"compute-isnan":141,"compute-isnumeric":142,"compute-issorted":143,"compute-kurtosis":144,"compute-l1norm":145,"compute-l2norm":146,"compute-lcm":149,"compute-leq":155,"compute-linfnorm":162,"compute-linspace":3,"compute-lmidmean":163,"compute-logspace":164,"compute-lpnorm":167,"compute-lt":170,"compute-max":177,"compute-mean":178,"compute-median":179,"compute-midhinge":184,"compute-midmean":187,"compute-midrange":188,"compute-midsummary":189,"compute-min":192,"compute-mmax":193,"compute-mmean":194,"compute-mmin":202,"compute-mode":203,"compute-mprod":204,"compute-mstdev":209,"compute-msum":210,"compute-multiply":218,"compute-mvariance":219,"compute-nangmean":220,"compute-nanhmean":221,"compute-nanmax":222,"compute-nanmean":223,"compute-nanmedian":224,"compute-nanmin":229,"compute-nanprod":230,"compute-nanqmean":233,"compute-nanquantiles":234,"compute-nanrange":241,"compute-nanstdev":244,"compute-nansum":245,"compute-nanvariance":248,"compute-neq":249,"compute-pcorr":252,"compute-polynomial":253,"compute-prod":260,"compute-qmean":262,"compute-quantile":263,"compute-quantiles":266,"compute-rad2deg":271,"compute-range":272,"compute-reverse":275,"compute-roundn":6,"compute-shuffle":279,"compute-signum":280,"compute-skewness":285,"compute-sqrt":286,"compute-stdev":287,"compute-subtract":288,"compute-sum":289,"compute-trimean":291,"compute-truncmean":295,"compute-tversky-index":304,"compute-umidmean":312,"compute-unique":313,"compute-unzip":314,"compute-variance":320,"compute-wmean":325,"compute-zip":326}],9:[function(require,module){"use strict";function abs(arr){if(!Array.isArray(arr))throw new TypeError("abs()::invalid input argument. Must provide an array.");for(var val,len=arr.length,i=0;len>i;i++)val=arr[i],0>val?arr[i]=-val:0===val&&(arr[i]=0)}module.exports=abs},{}],10:[function(require,module){"use strict";function add(arr,x){var len,i,isArray=Array.isArray(x);if(!Array.isArray(arr))throw new TypeError("add()::invalid input argument. Must provide an array.");if(len=arr.length,!isArray&&("number"!=typeof x||x!==x))throw new TypeError("add()::invalid input argument. Second argument must be either an array or a scalar.");if(isArray){if(len!==x.length)throw new Error("add()::invalid input argument. Arrays must be of equal length.");for(i=0;len>i;i++)arr[i]+=x[i]}else for(i=0;len>i;i++)arr[i]+=x}module.exports=add},{}],11:[function(require,module){"use strict";function argmax(arr){if(!Array.isArray(arr))throw new TypeError("argmax()::invalid input argument. Must provide an array.");for(var val,len=arr.length,max=arr[0],idx=[0],i=1;len>i;i++)val=arr[i],val>max?(max=val,idx.length=0,idx.push(i)):val===max&&idx.push(i);return idx}module.exports=argmax},{}],12:[function(require,module){"use strict";function argmin(arr){if(!Array.isArray(arr))throw new TypeError("argmin()::invalid input argument. Must provide an array.");for(var val,len=arr.length,min=arr[0],idx=[0],i=1;len>i;i++)val=arr[i],min>val?(min=val,idx.length=0,idx.push(i)):val===min&&idx.push(i);return idx}module.exports=argmin},{}],13:[function(require,module){"use strict";function argnanmax(arr){if(!Array.isArray(arr))throw new TypeError("argnanmax()::invalid input argument. Must provide an array.");for(var val,len=arr.length,max=Number.NEGATIVE_INFINITY,idx=[],i=0;len>i;i++)val=arr[i],"number"==typeof val&&val===val&&(val>max?(max=val,idx.length=0,idx.push(i)):val===max&&idx.push(i));return idx}module.exports=argnanmax},{}],14:[function(require,module){"use strict";function argnanmin(arr){if(!Array.isArray(arr))throw new TypeError("argnanmin()::invalid input argument. Must provide an array.");for(var val,len=arr.length,min=Number.POSITIVE_INFINITY,idx=[],i=0;len>i;i++)val=arr[i],"number"==typeof val&&val===val&&(min>val?(min=val,idx.length=0,idx.push(i)):val===min&&idx.push(i));return idx}module.exports=argnanmin},{}],15:[function(require,module){"use strict";function circshift(x,k){var len,i,type=typeof x,dir=1;if(!Array.isArray(x)&&"string"!==type)throw new TypeError("circshift()::invalid input argument. Must provide either an array or string to shift.");if(!isInteger(k))throw new TypeError("circshift()::invalid input argument. Second argument must be an integer.");if("string"===type&&(x=x.split("")),len=x.length,0>k&&(k=len+k),k%=len,k>len/2&&(dir=0,k=len-k),dir)for(i=0;k>i;i++)x.unshift(x.pop());else for(i=0;k>i;i++)x.push(x.shift());return"string"===type&&(x=x.join("")),x}var isInteger=require("validate.io-integer");module.exports=circshift},{"validate.io-integer":16}],16:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":17}],17:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],18:[function(require,module){"use strict";function cmax(arr){if(!Array.isArray(arr))throw new TypeError("cmax()::invalid input argument. Must provide an array.");var max,len=arr.length,v=new Array(len);max=arr[0],v[0]=max;for(var i=1;len>i;i++)arr[i]>max&&(max=arr[i]),v[i]=max;return v}module.exports=cmax},{}],19:[function(require,module){"use strict";function cmin(arr){if(!Array.isArray(arr))throw new TypeError("cmin()::invalid input argument. Must provide an array.");var min,len=arr.length,v=new Array(len);min=arr[0],v[0]=min;for(var i=1;len>i;i++)arr[i]<min&&(min=arr[i]),v[i]=min;return v}module.exports=cmin},{}],20:[function(require,module){"use strict";function covariance(){var args,opts,nArgs,len,deltas,delta,means,C,cov,arr,N,r,A,B,sum,val,i,j,n,bias=!1;if(args=Array.prototype.slice.call(arguments),nArgs=args.length,isObject(args[nArgs-1])&&(opts=args.pop(),nArgs-=1,opts.hasOwnProperty("bias"))){if("boolean"!=typeof opts.bias)throw new TypeError("covariance()::invalid input argument. Bias option must be a boolean.");bias=opts.bias}if(!nArgs)throw new Error("covariance()::insufficient input arguments. Must provide array arguments.");for(i=0;nArgs>i;i++)if(!Array.isArray(args[i]))throw new TypeError("covariance()::invalid input argument. Must provide array arguments.");for(Array.isArray(args[0][0])&&(args=args[0]),nArgs=args.length,len=args[0].length,i=1;nArgs>i;i++)if(args[i].length!==len)throw new Error("covariance()::invalid input argument. All arrays must have equal length.");for(deltas=new Array(nArgs),means=new Array(nArgs),C=new Array(nArgs),cov=new Array(nArgs),i=0;nArgs>i;i++){for(means[i]=args[i][0],arr=new Array(nArgs),j=0;nArgs>j;j++)arr[j]=0;C[i]=arr,cov[i]=arr.slice()}if(2>len)return cov;for(n=1;len>n;n++){for(N=n+1,r=n/N,i=0;nArgs>i;i++)deltas[i]=args[i][n]-means[i];for(i=0;nArgs>i;i++)for(arr=C[i],delta=deltas[i],j=i;nArgs>j;j++)A=arr[j],B=r*delta*deltas[j],sum=A+B,i!==j&&(C[j][i]=sum),arr[j]=sum;for(i=0;nArgs>i;i++)means[i]+=deltas[i]/N}for(n=N-1,bias&&(n=N),i=0;nArgs>i;i++)for(arr=C[i],j=i;nArgs>j;j++)val=arr[j]/n,cov[i][j]=val,i!==j&&(cov[j][i]=val);return cov}var isObject=require("validate.io-object");module.exports=covariance},{"validate.io-object":21}],21:[function(require,module){"use strict";function isObject(value){return"object"==typeof value&&null!==value&&!isArray(value)}var isArray=require("validate.io-array");module.exports=isObject},{"validate.io-array":22}],22:[function(require,module){"use strict";function isArray(value){return"[object Array]"===Object.prototype.toString.call(value)}module.exports=Array.isArray||isArray},{}],23:[function(require,module){"use strict";function cprod(arr,opts){var clbk,copy=!0;if(!isArray(arr))throw new TypeError("cprod()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(arguments.length>1){if(!isObject(opts))throw new TypeError("cprod()::invalid input argument. Options argument must be an object. Value: `"+opts+"`.");if(opts.hasOwnProperty("accessor")&&(clbk=opts.accessor,!isFunction(clbk)))throw new TypeError("cprod()::invalid option. Accessor must be a function. Value: `"+clbk+"`.");if(opts.hasOwnProperty("copy")&&(copy=opts.copy,!isBoolean(copy)))throw new TypeError("cprod()::invalid option. Copy option must be a boolean primitive. Value: `"+copy+"`.")}var out,v,i,len=arr.length;if(out=copy===!0?new Array(len):arr,clbk)for(out[0]=clbk(arr[0],0),i=1;len>i;i++)v=out[i-1],out[i]=0===v?0:v*clbk(arr[i],i);else for(out[0]=arr[0],i=1;len>i;i++)out[i]=out[i-1]*arr[i];return out}var isArray=require("validate.io-array"),isObject=require("validate.io-object"),isBoolean=require("validate.io-boolean-primitive"),isFunction=require("validate.io-function");module.exports=cprod},{"validate.io-array":24,"validate.io-boolean-primitive":25,"validate.io-function":26,"validate.io-object":27}],24:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],25:[function(require,module){"use strict";function isBoolean(value){return value===!0||value===!1}module.exports=isBoolean},{}],26:[function(require,module){"use strict";function isFunction(value){return"function"==typeof value}module.exports=isFunction},{}],27:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":24}],28:[function(require,module){"use strict";function cross(x,y){if(!Array.isArray(x))throw new TypeError("cross()::invalid input argument. First argument must be an array.");if(!Array.isArray(y))throw new TypeError("cross()::invalid input argument. Second argument must be an array.");if(3!==x.length||3!==y.length)throw new Error("cross()::invalid input argument. Input arrays must be of length 3.");return[x[1]*y[2]-x[2]*y[1],x[2]*y[0]-x[0]*y[2],x[0]*y[1]-x[1]*y[0]]}module.exports=cross},{}],29:[function(require,module){"use strict";function csum(arr){if(!Array.isArray(arr))throw new TypeError("csum()::invalid input argument. Must provide an array.");var len=arr.length,v=new Array(len);v[0]=arr[0];for(var i=1;len>i;i++)v[i]=v[i-1]+arr[i];return v}module.exports=csum},{}],30:[function(require,module){"use strict";function validDate(value,name){var type;if(type=typeof value,"string"===type){if(value=Date.parse(value),value!==value)throw new Error("datespace()::invalid input argument. Unable to parse "+name.toLowerCase()+" date.");value=new Date(value)}if("number"===type){if(!timestamp.test(value))throw new Error("datespace()::invalid input argument. Numeric "+name.toLowerCase()+" date must be either a Unix or Javascript timestamp.");10===value.toString().length&&(value=1e3*value),value=new Date(value)}if(!(value instanceof Date))throw new TypeError("datespace()::invalid input argument. "+name+" date must either be a date string, Date object, Unix timestamp, or JavaScript timestamp.");return value}function datespace(start,stop,length,options){var round,end,d,tmp,arr,nArgs=arguments.length,opts={round:"floor"},len=100,flg=!0;if(start=validDate(start,"Start"),stop=validDate(stop,"Stop"),nArgs>2){if(3===nArgs?isObject(length)?opts=length:(len=length,flg=!1):(opts=options,len=length),0===len)return[];if(!isInteger(len)||0>len)throw new TypeError("datespace()::invalid input argument. Length must a positive integer.");if(flg){if(!isObject(opts))throw new TypeError("datespace()::invalid input argument. Options must be an object.");if(opts.hasOwnProperty("round")){if("string"!=typeof opts.round)throw new TypeError("datespace()::invalid input argument. Round option must be a string.");if(-1===rounders.indexOf(opts.round))throw new Error("datespace()::invalid input argument. Unrecognized round option. Must be one of ["+rounders.join(",")+"].")}else opts.round="floor"}}round=Math[opts.round],end=len-1,d=(stop.getTime()-start.getTime())/end,arr=new Array(len),tmp=start,arr[0]=tmp,tmp=tmp.getTime();for(var i=1;end>i;i++)tmp+=d,arr[i]=new Date(round(tmp));return arr[end]=stop,arr}var isObject=require("validate.io-object"),isInteger=require("validate.io-integer"),timestamp=/^\d{10}$|^\d{13}$/,rounders=["floor","ceil","round"];module.exports=datespace},{"validate.io-integer":31,"validate.io-object":33}],31:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":32}],32:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],33:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":34}],34:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],35:[function(require,module){"use strict";function deg2rad(x){var len,isArray=Array.isArray(x);if(!isArray&&("number"!=typeof x||x!==x))throw new TypeError("deg2rad()::invalid input argument. Must provide either a single numeric value or a numeric array.");if(!isArray)return x*Math.PI/180;if(len=x.length,!len)return null;for(var i=0;len>i;i++)x[i]*=Math.PI/180;return x}module.exports=deg2rad},{}],36:[function(require,module){!function(){"use strict";function diff(arr){if(!Array.isArray(arr))throw new TypeError("diff()::invalid input argument. Must provide an array.");for(var len=arr.length,d=new Array(len-1),i=0;len-1>i;i++)d[i]=arr[i]-arr[i+1];return d}module.exports=diff}()},{}],37:[function(require,module){"use strict";function dims(arr,d,max){max&&d.length===max||Array.isArray(arr[0])&&(d.push(arr[0].length),dims(arr[0],d,max))}function check(arr,d){for(var val,flg,len=arr.length,dim=d.shift(),nDims=d.length,i=0;len>i;i++){if(val=arr[i],!Array.isArray(val)||val.length!==dim)return!1;if(nDims&&(flg=check(val,d.slice()),!flg))return!1}return!0}function compute(arr,max){if(!Array.isArray(arr))throw new TypeError("dims()::invalid input argument. Must provide an array.");if(arguments.length>1&&(!isInteger(max)||1>max))throw new TypeError("dims()::invalid input argument. `max` option must be a positive integer.");var d,flg;return d=[arr.length],dims(arr,d,max),d.length>1&&(flg=check(arr,d.slice(1)),!flg)?null:d}var isInteger=require("validate.io-integer");module.exports=compute},{"validate.io-integer":38}],38:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":39}],39:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],40:[function(require,module){"use strict";function divide(arr,x){var len,i,isArray=Array.isArray(x);if(!Array.isArray(arr))throw new TypeError("divide()::invalid input argument. Must provide an array.");if(len=arr.length,!isArray&&("number"!=typeof x||x!==x))throw new TypeError("divide()::invalid input argument. Second argument must be either an array or a scalar.");if(isArray){if(len!==x.length)throw new Error("divide()::invalid input argument. Arrays must be of equal length.");for(i=0;len>i;i++)arr[i]/=x[i]}else for(i=0;len>i;i++)arr[i]/=x}module.exports=divide},{}],41:[function(require,module){"use strict";function dot(x,y,clbk){if(!isArray(x))throw new TypeError("dot()::invalid input argument. First argument must be an array. Value: `"+x+"`.");if(!isArray(y))throw new TypeError("dot()::invalid input argument. Second argument must be an array. Value: `"+y+"`.");if(arguments.length>2&&!isFunction(clbk))throw new TypeError("dot()::invalid input argument. Accessor must be a function. Value: `"+clbk+"`.");var i,len=x.length,sum=0;if(len!==y.length)throw new Error("dot()::invalid input argument. Arrays must be of equal length.");if(!len)return null;if(clbk)for(i=0;len>i;i++)sum+=clbk(x[i],i,0)*clbk(y[i],i,1);else for(i=0;len>i;i++)sum+=x[i]*y[i];return sum}var isArray=require("validate.io-array"),isFunction=require("validate.io-function");module.exports=dot},{"validate.io-array":42,"validate.io-function":43}],42:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],43:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],44:[function(require,module){"use strict";function eq(arr,x,opts){var out,len,i,isArray=Array.isArray(x),strict=!0,arrCompare=!1;if(!Array.isArray(arr))throw new TypeError("eq()::invalid input argument. Must provide an array.");if(arguments.length>2){if(!isObject(opts))throw new TypeError("eq()::invalid input argument. Options must be an object.");if(opts.hasOwnProperty("strict")&&(strict=opts.strict,"boolean"!=typeof strict))throw new TypeError("eq()::invalid input argument. Strict option must be a boolean.");if(opts.hasOwnProperty("array")&&(arrCompare=opts.array,"boolean"!=typeof arrCompare))throw new TypeError("eq()::invalid input argument. Array option must be a boolean.")}if(len=arr.length,out=new Array(len),strict){if(!isArray||x.length!==len||arrCompare){for(i=0;len>i;i++)out[i]=arr[i]===x?1:0;return out}for(i=0;len>i;i++)out[i]=arr[i]===x[i]?1:0;return out}if(!isArray||x.length!==len||arrCompare){for(i=0;len>i;i++)out[i]=arr[i]==x?1:0;return out}for(i=0;len>i;i++)out[i]=arr[i]==x[i]?1:0;return out}var isObject=require("validate.io-object");module.exports=eq},{"validate.io-object":45}],45:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":46}],46:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],47:[function(require,module){!function(){"use strict";function erf(x){var tmp,z,r,s,y,p,q,exp=Math.exp,sign=!1;if("number"!=typeof x)throw new TypeError("erf()::invalid input argument. Must provide a numeric value.");return x!==x?0/0:x===INF?1:x===NINF?-1:(0>x&&(x=-x,sign=!0),.84375>x?(SMALL>x?tmp=TINY>x?.125*(8*x+EFX8*x):x+EFX*x:(z=x*x,r=PP0+z*(PP1+z*(PP2+z*(PP3+z*PP4))),s=1+z*(QQ1+z*(QQ2+z*(QQ3+z*(QQ4+z*QQ5)))),y=r/s,tmp=x+x*y),sign?-tmp:tmp):1.25>x?(s=x-1,p=PA0+s*(PA1+s*(PA2+s*(PA3+s*(PA4+s*(PA5+s*PA6))))),q=1+s*(QA1+s*(QA2+s*(QA3+s*(QA4+s*(QA5+s*QA6))))),sign?-ERX-p/q:ERX+p/q):x>=6?sign?TINY-1:1-TINY:(s=1/(x*x),1/.35>x?(r=RA0+s*(RA1+s*(RA2+s*(RA3+s*(RA4+s*(RA5+s*(RA6+s*RA7)))))),s=1+s*(SA1+s*(SA2+s*(SA3+s*(SA4+s*(SA5+s*(SA6+s*(SA7+s*SA8)))))))):(r=RB0+s*(RB1+s*(RB2+s*(RB3+s*(RB4+s*(RB5+s*RB6))))),s=1+s*(SB1+s*(SB2+s*(SB3+s*(SB4+s*(SB5+s*(SB6+s*SB7))))))),z=0xffffffff00000000&x,r=exp(-z*z-.5625)*exp((z-x)*(z+x)+r/s),sign?r/x-1:1-r/x))}var INF=Number.POSITIVE_INFINITY,NINF=Number.NEGATIVE_INFINITY,TINY=1e-300,SMALL=1/(1<<28),ERX=.8450629115104675,EFX=.1283791670955126,EFX8=1.0270333367641007,PP0=.12837916709551256,PP1=-.3250421072470015,PP2=-.02848174957559851,PP3=-.005770270296489442,PP4=-23763016656650163e-21,QQ1=.39791722395915535,QQ2=.0650222499887673,QQ3=.005081306281875766,QQ4=.00013249473800432164,QQ5=-3960228278775368e-21,PA0=-.0023621185607526594,PA1=.41485611868374833,PA2=-.3722078760357013,PA3=.31834661990116175,PA4=-.11089469428239668,PA5=.035478304325618236,PA6=-.002166375594868791,QA1=.10642088040084423,QA2=.540397917702171,QA3=.07182865441419627,QA4=.12617121980876164,QA5=.01363708391202905,QA6=.011984499846799107,RA0=-.009864944034847148,RA1=-.6938585727071818,RA2=-10.558626225323291,RA3=-62.375332450326006,RA4=-162.39666946257347,RA5=-184.60509290671104,RA6=-81.2874355063066,RA7=-9.814329344169145,SA1=19.651271667439257,SA2=137.65775414351904,SA3=434.56587747522923,SA4=645.3872717332679,SA5=429.00814002756783,SA6=108.63500554177944,SA7=6.570249770319282,SA8=-.0604244152148581,RB0=-.0098649429247001,RB1=-.799283237680523,RB2=-17.757954917754752,RB3=-160.63638485582192,RB4=-637.5664433683896,RB5=-1025.0951316110772,RB6=-483.5191916086514,SB1=30.33806074348246,SB2=325.7925129965739,SB3=1536.729586084437,SB4=3199.8582195085955,SB5=2553.0504064331644,SB6=474.52854120695537,SB7=-22.44095244658582;module.exports=function(x){if("number"==typeof x)return erf(x);if(!Array.isArray(x))throw new TypeError("erf()::invalid input argument. Must provide an array.");for(var len=x.length,arr=new Array(len),i=0;len>i;i++)arr[i]=erf(x[i]);return arr}}()},{}],48:[function(require,module){!function(){"use strict";function erfc(x){var tmp,z,r,s,y,p,q,exp=Math.exp,sign=!1;if("number"!=typeof x)throw new TypeError("erfc()::invalid input argument. Must provide a numeric value.");if(x!==x)return 0/0;if(x===INF)return 0;if(x===NINF)return 2;if(0>x&&(x=-x,sign=!0),.84375>x)return SMALL>x?tmp=x:(z=x*x,r=PP0+z*(PP1+z*(PP2+z*(PP3+z*PP4))),s=1+z*(QQ1+z*(QQ2+z*(QQ3+z*(QQ4+z*QQ5)))),y=r/s,tmp=.25>x?x+x*y:.5+(x*y+(x-.5))),sign?1+tmp:1-tmp;if(1.25>x)return s=x-1,p=PA0+s*(PA1+s*(PA2+s*(PA3+s*(PA4+s*(PA5+s*PA6))))),q=1+s*(QA1+s*(QA2+s*(QA3+s*(QA4+s*(QA5+s*QA6))))),sign?1+ERX+p/q:1-ERX-p/q;if(28>x){if(s=1/(x*x),1/.35>x)r=RA0+s*(RA1+s*(RA2+s*(RA3+s*(RA4+s*(RA5+s*(RA6+s*RA7)))))),s=1+s*(SA1+s*(SA2+s*(SA3+s*(SA4+s*(SA5+s*(SA6+s*SA7))))));else{if(sign&&x>6)return 2-TINY;r=RB0+s*(RB1+s*(RB2+s*(RB3+s*(RB4+s*(RB5+s*RB6))))),s=1+s*(SB1+s*(SB2+s*(SB3+s*(SB4+s*(SB5+s*(SB6+s*SB7))))))}return z=0xffffffff00000000&x,r=exp(-z*z-.5625)*exp((z-x)*(z+x)+r/s),sign?2-r/x:r/x}return sign?2-TINY:TINY*TINY}var INF=Number.POSITIVE_INFINITY,NINF=Number.NEGATIVE_INFINITY,TINY=1e-300,SMALL=1/(1<<56),ERX=.8450629115104675,PP0=.12837916709551256,PP1=-.3250421072470015,PP2=-.02848174957559851,PP3=-.005770270296489442,PP4=-23763016656650163e-21,QQ1=.39791722395915535,QQ2=.0650222499887673,QQ3=.005081306281875766,QQ4=.00013249473800432164,QQ5=-3960228278775368e-21,PA0=-.0023621185607526594,PA1=.41485611868374833,PA2=-.3722078760357013,PA3=.31834661990116175,PA4=-.11089469428239668,PA5=.035478304325618236,PA6=-.002166375594868791,QA1=.10642088040084423,QA2=.540397917702171,QA3=.07182865441419627,QA4=.12617121980876164,QA5=.01363708391202905,QA6=.011984499846799107,RA0=-.009864944034847148,RA1=-.6938585727071818,RA2=-10.558626225323291,RA3=-62.375332450326006,RA4=-162.39666946257347,RA5=-184.60509290671104,RA6=-81.2874355063066,RA7=-9.814329344169145,SA1=19.651271667439257,SA2=137.65775414351904,SA3=434.56587747522923,SA4=645.3872717332679,SA5=429.00814002756783,SA6=108.63500554177944,SA7=6.570249770319282,RB0=-.0098649429247001,RB1=-.799283237680523,RB2=-17.757954917754752,RB3=-160.63638485582192,RB4=-637.5664433683896,RB5=-1025.0951316110772,RB6=-483.5191916086514,SB1=30.33806074348246,SB2=325.7925129965739,SB3=1536.729586084437,SB4=3199.8582195085955,SB5=2553.0504064331644,SB6=474.52854120695537,SB7=-22.44095244658582;module.exports=function(x){if("number"==typeof x)return erfc(x);if(!Array.isArray(x))throw new TypeError("erfc()::invalid input argument. Must provide an array.");for(var len=x.length,arr=new Array(len),i=0;len>i;i++)arr[i]=erfc(x[i]);return arr}}()},{}],49:[function(require,module){!function(){
"use strict";function fliplr(arr){for(var tmp,idx,len=arr.length,half=Math.floor(len/2),i=0;half>i;i++)tmp=arr[i],idx=len-1-i,arr[i]=arr[idx],arr[idx]=tmp}function calc(x,v,P,Q,Y){var s,r;return s=x-v,r=polyval(P,s)/polyval(Q,s),Y*x+r*x}function erfcinv(x){var q,g,r,tmp,sign=!1;if("number"!=typeof x)throw new TypeError("erfcinv()::invalid input argument. Must provide a numeric value.");if(x!==x)return 0/0;if(0>x||x>2)throw new Error("erfcinv()::invalid input argument. Value must be on the interval [0,2].");return 2===x?Number.POSITIVE_INFINITY:0===x?Number.NEGATIVE_INFINITY:1===x?0:(x>1?(q=2-x,x=1-q,sign=!0):(q=x,x=1-x),.5>=x?(g=x*(x+10),r=polyval(P1,x)/polyval(Q1,x),tmp=g*Y1+g*r,sign?-tmp:tmp):q>=.25?(g=Math.sqrt(-2*Math.log(q)),q-=.25,r=polyval(P2,q)/polyval(Q2,q),tmp=g/(Y2+r),sign?-tmp:tmp):(q=Math.sqrt(-Math.log(q)),3>q?calc(q,1.125,P3,Q3,Y3):6>q?calc(q,3,P4,Q4,Y4):calc(q,6,P5,Q5,Y5)))}var polyval=require("compute-polynomial"),Y1=.08913147449493408,P1=[-.0005087819496582806,-.008368748197417368,.03348066254097446,-.012692614766297404,-.03656379714117627,.02198786811111689,.008226878746769157,-.005387729650712429],Q1=[1,-.9700050433032906,-1.5657455823417585,1.5622155839842302,.662328840472003,-.7122890234154284,-.05273963823400997,.07952836873415717,-.0023339375937419,.0008862163904564247],Y2=2.249481201171875,P2=[-.20243350835593876,.10526468069939171,8.3705032834312,17.644729840837403,-18.851064805871424,-44.6382324441787,17.445385985570866,21.12946554483405,-3.6719225470772936],Q2=[1,6.242641248542475,3.971343795334387,-28.66081804998,-20.14326346804852,48.560921310873994,10.826866735546016,22.643693341313973,1.7211476576120028],Y3=.807220458984375,P3=[-.1311027816799519,-.16379404719331705,.11703015634199525,.38707973897260434,.3377855389120359,.14286953440815717,.029015791000532906,.0021455899538880526,-6.794655751811263e-7,2.8522533178221704e-8,-6.81149956853777e-10],Q3=[1,3.4662540724256723,5.381683457070069,4.778465929458438,2.5930192162362027,.848854343457902,.15226433829533179,.011059242293464892],Y4=.9399557113647461,P4=[-.0350353787183178,-.0022242652921344794,.018557330651423107,.009508047013259196,.0018712349281955923,.00015754461742496055,460469890584318e-20,-2.304047769118826e-10,2.6633922742578204e-12],Q4=[1,1.3653349817554064,.7620591645536234,.22009110576413124,.03415891436709477,.00263861676657016,7646752923027944e-20],Y5=.9836282730102539,P5=[-.016743100507663373,-.0011295143874558028,.001056288621524929,.00020938631748758808,14962478375834237e-21,4.4969678992770644e-7,4.625961635228786e-9,-2.811287356288318e-14,9.905570997331033e-17],Q5=[1,.5914293448864175,.1381518657490833,.016074608709367652,.0009640118070051656,27533547476472603e-21,2.82243172016108e-7];fliplr(P1),fliplr(Q1),fliplr(P2),fliplr(Q2),fliplr(P3),fliplr(Q3),fliplr(P4),fliplr(Q4),fliplr(P5),fliplr(Q5),module.exports=function(x){if("number"==typeof x)return erfcinv(x);if(!Array.isArray(x))throw new TypeError("erfcinv()::invalid input argument. Must provide an array.");for(var len=x.length,arr=new Array(len),i=0;len>i;i++)arr[i]=erfcinv(x[i]);return arr}}()},{"compute-polynomial":253}],50:[function(require,module){!function(){"use strict";function fliplr(arr){for(var tmp,idx,len=arr.length,half=Math.floor(len/2),i=0;half>i;i++)tmp=arr[i],idx=len-1-i,arr[i]=arr[idx],arr[idx]=tmp}function calc(x,v,P,Q,Y,sign){var s,r,tmp;return s=x-v,r=polyval(P,s)/polyval(Q,s),tmp=Y*x+r*x,sign?-tmp:tmp}function erfinv(x){var q,g,r,tmp,sign=!1;if("number"!=typeof x)throw new TypeError("erfinv()::invalid input argument. Must provide a numeric value.");if(x!==x)return 0/0;if(-1>x||x>1)throw new Error("erfinv()::invalid input argument. Value must be on the interval [-1,1].");return 1===x?Number.POSITIVE_INFINITY:-1===x?Number.NEGATIVE_INFINITY:0===x?0:(0>x&&(x=-x,sign=!0),q=1-x,.5>=x?(g=x*(x+10),r=polyval(P1,x)/polyval(Q1,x),tmp=g*Y1+g*r,sign?-tmp:tmp):q>=.25?(g=Math.sqrt(-2*Math.log(q)),q-=.25,r=polyval(P2,q)/polyval(Q2,q),tmp=g/(Y2+r),sign?-tmp:tmp):(q=Math.sqrt(-Math.log(q)),3>q?calc(q,1.125,P3,Q3,Y3,sign):6>q?calc(q,3,P4,Q4,Y4,sign):calc(q,6,P5,Q5,Y5,sign)))}var polyval=require("compute-polynomial"),Y1=.08913147449493408,P1=[-.0005087819496582806,-.008368748197417368,.03348066254097446,-.012692614766297404,-.03656379714117627,.02198786811111689,.008226878746769157,-.005387729650712429],Q1=[1,-.9700050433032906,-1.5657455823417585,1.5622155839842302,.662328840472003,-.7122890234154284,-.05273963823400997,.07952836873415717,-.0023339375937419,.0008862163904564247],Y2=2.249481201171875,P2=[-.20243350835593876,.10526468069939171,8.3705032834312,17.644729840837403,-18.851064805871424,-44.6382324441787,17.445385985570866,21.12946554483405,-3.6719225470772936],Q2=[1,6.242641248542475,3.971343795334387,-28.66081804998,-20.14326346804852,48.560921310873994,10.826866735546016,22.643693341313973,1.7211476576120028],Y3=.807220458984375,P3=[-.1311027816799519,-.16379404719331705,.11703015634199525,.38707973897260434,.3377855389120359,.14286953440815717,.029015791000532906,.0021455899538880526,-6.794655751811263e-7,2.8522533178221704e-8,-6.81149956853777e-10],Q3=[1,3.4662540724256723,5.381683457070069,4.778465929458438,2.5930192162362027,.848854343457902,.15226433829533179,.011059242293464892],Y4=.9399557113647461,P4=[-.0350353787183178,-.0022242652921344794,.018557330651423107,.009508047013259196,.0018712349281955923,.00015754461742496055,460469890584318e-20,-2.304047769118826e-10,2.6633922742578204e-12],Q4=[1,1.3653349817554064,.7620591645536234,.22009110576413124,.03415891436709477,.00263861676657016,7646752923027944e-20],Y5=.9836282730102539,P5=[-.016743100507663373,-.0011295143874558028,.001056288621524929,.00020938631748758808,14962478375834237e-21,4.4969678992770644e-7,4.625961635228786e-9,-2.811287356288318e-14,9.905570997331033e-17],Q5=[1,.5914293448864175,.1381518657490833,.016074608709367652,.0009640118070051656,27533547476472603e-21,2.82243172016108e-7];fliplr(P1),fliplr(Q1),fliplr(P2),fliplr(Q2),fliplr(P3),fliplr(Q3),fliplr(P4),fliplr(Q4),fliplr(P5),fliplr(Q5),module.exports=function(x){if("number"==typeof x)return erfinv(x);if(!Array.isArray(x))throw new TypeError("erfinv()::invalid input argument. Must provide an array.");for(var len=x.length,arr=new Array(len),i=0;len>i;i++)arr[i]=erfinv(x[i]);return arr}}()},{"compute-polynomial":253}],51:[function(require,module){"use strict";function find(arr,opts,clbk){var ret,len,k,v,i,count,out,returns=["values","indices","*"],mode=0;if(!Array.isArray(arr))throw new TypeError("find()::invalid input argument. Must provide an array.");if(len=arr.length,arguments.length<3&&(clbk=opts,opts={}),"function"!=typeof clbk)throw new TypeError("find()::invalid input argument. Callback argument must be a function.");if(!isObject(opts))throw new TypeError("find()::invalid input argument. Options must be an object.");if(opts.hasOwnProperty("k")){if(k=opts.k,"number"!=typeof k||k!==k||!isInteger(k))throw new TypeError("find()::invalid input argument. `k` must be an integer.")}else k=len;if(opts.hasOwnProperty("returns")){if(ret=opts.returns,"string"!=typeof ret||-1===returns.indexOf(ret))throw new TypeError("find()::invalid input argument. `returns` option must be a string and have one of the following values: `values`, `indices`, `all`.");"values"===ret?mode=1:"*"===ret&&(mode=2)}if(out=[],count=0,0===k)return out;if(k>0){for(i=0;len>i&&(v=arr[i],!clbk(v,i,arr)||(out.push(2===mode?[i,v]:1===mode?v:i),++count!==k));i++);return out}for(k=-k,i=len-1;i>=0&&(v=arr[i],!clbk(v,i,arr)||(out.push(2===mode?[i,v]:1===mode?v:i),++count!==k));i--);return out}var isObject=require("validate.io-object"),isInteger=require("validate.io-integer");module.exports=find},{"validate.io-integer":52,"validate.io-object":54}],52:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":53}],53:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],54:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":55}],55:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],56:[function(require,module){"use strict";function dims(arr,d,depth){return depth&&isArray(arr)&&(d.push(arr.length),dims(arr[0],d,depth-1)),d}function createMatrixFcn(d){var fcn,i,len=d.length,n=len-1;for(fcn="var o=[];var ",i=0;len>i;i++)fcn+="i"+i,fcn+=n>i?",":";";for(i=0;len>i;i++)fcn+="for(i"+i+"=0;i"+i+"<"+d[i]+";i"+i+"++){";for(fcn+="o.push(x",i=0;len>i;i++)fcn+="[i"+i+"]";for(fcn+=");",i=0;len>i;i++)fcn+="}";return fcn+="return o;",new Function("x",fcn)}function recurse(out,arr,depth){var val,i,len=arr.length;for(i=0;len>i;i++)val=arr[i],depth&&isArray(val)?recurse(out,val,depth-1):out.push(val);return out}function flatten(arr,opts){var out,fcn,d,isMatrix=!1,depth=Number.POSITIVE_INFINITY,copy=!1;if(!isArray(arr))throw new TypeError("flatten()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(arguments.length>1){if(!isObject(opts))throw new TypeError("flatten()::invalid input argument. Options argument must be an object. Value: `"+opts+"`.");if(opts.hasOwnProperty("matrix")&&(isMatrix=opts.matrix,!isBoolean(isMatrix)))throw new TypeError("flatten()::invalid option. Matrix option must be a boolean primitive. Option: `"+isMatrix+"`.");if(opts.hasOwnProperty("depth")&&(depth=opts.depth,!isNonNegativeInteger(depth)))throw new TypeError("flatten()::invalid option. Depth option must be a nonnegative integer. Option: `"+depth+"`.");if(opts.hasOwnProperty("copy")&&(copy=opts.copy,!isBoolean(copy)))throw new TypeError("flatten()::invalid option. Copy option must be a boolean primitive. Option: `"+copy+"`.")}return 0===depth?out=arr:isMatrix?(d=dims(arr,[],depth),fcn=createMatrixFcn(d),out=fcn(arr)):out=recurse([],arr,depth),copy?createCopy(out):out}function createFlatten(d,opts){var fcn,copy=!1;if(!isPositiveIntegerArray(d))throw new TypeError("createFlatten()::invalid input argument. Dimensions must be a positive integer array. Value: `"+d+"`.");if(arguments.length>1){if(!isObject(opts))throw new TypeError("createFlatten()::invalid input argument. Options argument must be an object. Value: `"+opts+"`.");if(opts.hasOwnProperty("copy")&&(copy=opts.copy,!isBoolean(copy)))throw new TypeError("createFlatten()::invalid option. Copy option must be a boolean primitive. Option: `"+copy+"`.")}return fcn=createMatrixFcn(d),copy?function(arr){return createCopy(fcn(arr))}:fcn}var createCopy=require("utils-copy"),isArray=require("validate.io-array"),isObject=require("validate.io-object"),isNonNegativeInteger=require("validate.io-nonnegative-integer"),isPositiveIntegerArray=require("validate.io-positive-integer-array"),isBoolean=require("validate.io-boolean-primitive");module.exports=flatten,module.exports.createFlatten=createFlatten},{"utils-copy":57,"validate.io-array":60,"validate.io-boolean-primitive":61,"validate.io-nonnegative-integer":62,"validate.io-object":65,"validate.io-positive-integer-array":66}],57:[function(require,module){"use strict";function indexOf(arr,val){var i,len=arr.length;for(i=0;len>i;i++)if(arr[i]===val)return i;return-1}function objectKeys(obj){var key,keys=[];for(key in obj)obj.hasOwnProperty(key)&&keys.push(key);return keys}function cloneInstance(val){var names,name,desc,tmp,ref,i,cache=[],refs=[];for(ref=Object.create(Object.getPrototypeOf(val)),cache.push(val),refs.push(ref),names=Object.getOwnPropertyNames(val),i=0;i<names.length;i++)name=names[i],desc=Object.getOwnPropertyDescriptor(val,name),desc.hasOwnProperty("value")&&(tmp=isArray(val[name])?[]:{},desc.value=deepCopy(val[name],tmp,cache,refs,-1)),Object.defineProperty(ref,name,desc);return Object.isExtensible(val)||Object.preventExtensions(ref),Object.isSealed(val)&&Object.seal(ref),Object.isFrozen(val)&&Object.freeze(ref),ref}function deepCopy(val,copy,cache,refs,level){var keys,name,key,ref,x,i,j;if(level-=1,"object"!=typeof val||null===val)return val;if(isBuffer(val))return new val.constructor(val);if(name=typeName(val),"Set"===name||"Map"===name)return console.warn("copy()::not supported. Copying Sets and Maps is not currently supported. File an issue, submit a pull request, or contact the author directly at kgryte@gmail.com."),{};if("String"===name||"Boolean"===name||"Number"===name)return val.valueOf();if("Date"===name)return new Date(+val);if("RegExp"===name)return val=val.toString(),i=val.lastIndexOf("/"),new RegExp(val.slice(1,i),val.slice(i+1));if(typedArrays.hasOwnProperty(name))return typedArrays[name](val);if("Array"!==name&&"Object"!==name)return"function"==typeof Object.freeze?cloneInstance(val):{};if(keys=objectKeys(val),level>0)for(j=0;j<keys.length;j++)key=keys[j],x=val[key],name=typeName(x),"object"!=typeof x||null===x||"Array"!==name&&"Object"!==name||isBuffer(x)?copy[key]=deepCopy(x):(i=indexOf(cache,x),-1===i?(ref=isArray(x)?[]:{},cache.push(x),refs.push(ref),copy[key]=deepCopy(x,ref,cache,refs,level)):copy[key]=refs[i]);else for(j=0;j<keys.length;j++)key=keys[j],copy[key]=val[key];return copy}function createCopy(val,level){var copy;if(arguments.length>1){if(!isNonNegativeInteger(level))throw new TypeError("copy()::invalid input argument. Level must be a nonnegative integer. Value: `"+level+"`.");if(0===level)return val}else level=Number.POSITIVE_INFINITY;return copy=isArray(val)?[]:{},deepCopy(val,copy,[val],[copy],level)}var isArray=require("validate.io-array"),isBuffer=require("validate.io-buffer"),isNonNegativeInteger=require("validate.io-nonnegative-integer"),typeName=require("type-name"),typedArrays={Int8Array:null,Uint8Array:null,Uint8ClampedArray:null,Int16Array:null,Uint16Array:null,Int32Array:null,Uint32Array:null,Float32Array:null,Float64Array:null};!function(){var key,i,keys=objectKeys(typedArrays),len=keys.length;for(i=0;len>i;i++)key=keys[i],typedArrays[key]=new Function("arr","return new "+key+"( arr );")}(),module.exports=createCopy},{"type-name":58,"validate.io-array":60,"validate.io-buffer":59,"validate.io-nonnegative-integer":62}],58:[function(require,module){"use strict";function funcName(f){return f.name?f.name:/^\s*function\s*([^\(]*)/im.exec(f.toString())[1]}function ctorName(obj){var strName=toStr.call(obj).slice(8,-1);return"Object"===strName&&obj.constructor?funcName(obj.constructor):strName}function typeName(val){var type;return null===val?"null":(type=typeof val,"object"===type?ctorName(val):type)}var toStr=Object.prototype.toString;module.exports=typeName},{}],59:[function(require,module){"use strict";function isBuffer(val){return"object"==typeof val&&null!==val&&val.constructor&&"function"==typeof val.constructor.isBuffer&&val.constructor.isBuffer(val)}module.exports=isBuffer},{}],60:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],61:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{dup:25}],62:[function(require,module){"use strict";function isNonNegativeInteger(value){return isInteger(value)&&value>=0}var isInteger=require("validate.io-integer");module.exports=isNonNegativeInteger},{"validate.io-integer":63}],63:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":64}],64:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],65:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":60}],66:[function(require,module){"use strict";function isPositiveIntegerArray(value){var len,i;if(!isArray(value))return!1;if(len=value.length,!len)return!1;for(i=0;len>i;i++)if(!isPositiveInteger(value[i]))return!1;return!0}var isArray=require("validate.io-array"),isPositiveInteger=require("validate.io-positive-integer");module.exports=isPositiveIntegerArray},{"validate.io-array":60,"validate.io-positive-integer":67}],67:[function(require,module){"use strict";function isPositiveInteger(value){return isInteger(value)&&value>0}var isInteger=require("validate.io-integer");module.exports=isPositiveInteger},{"validate.io-integer":68}],68:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":69}],69:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],70:[function(require,module){"use strict";function gcd(a,b){var t,k=1;if(0===a)return b;if(0===b)return a;for(;a%2===0&&b%2===0;)a/=2,b/=2,k=2*k;for(;a%2===0;)a/=2;for(;b;){for(;b%2===0;)b/=2;a>b&&(t=b,b=a,a=t),b-=a}return k*a}function bitwise(a,b){var t,k=0;if(0===a)return b;if(0===b)return a;for(;0===(1&a)&&0===(1&b);)a>>>=1,b>>>=1,k++;for(;0===(1&a);)a>>>=1;for(;b;){for(;0===(1&b);)b>>>=1;a>b&&(t=b,b=a,a=t),b-=a}return a<<k}function compute(){var args,clbk,arr,len,a,b,i,nargs=arguments.length;for(args=new Array(nargs),i=0;nargs>i;i++)args[i]=arguments[i];if(isIntegerArray(args)){if(2===nargs)return a=args[0],b=args[1],0>a&&(a=-a),0>b&&(b=-b),MAXINT>=a&&MAXINT>=b?bitwise(a,b):gcd(a,b);arr=args}else{if(!isArray(args[0]))throw new TypeError("gcd()::invalid input argument. Must provide an array of integers. Value: `"+args[0]+"`.");if(nargs>1){if(arr=args[0],clbk=args[1],!isFunction(clbk))throw new TypeError("gcd()::invalid input argument. Accessor must be a function. Value: `"+clbk+"`.")}else arr=args[0]}if(len=arr.length,2>len)return null;if(clbk){for(a=new Array(len),i=0;len>i;i++)a[i]=clbk(arr[i],i);arr=a}if(3>nargs&&!isIntegerArray(arr))throw new TypeError("gcd()::invalid input argument. Accessed array values must be integers. Value: `"+arr+"`.");for(i=0;len>i;i++)a=arr[i],0>a&&(arr[i]=-a);for(a=arr[0],i=1;len>i;i++)b=arr[i],a=MAXINT>=b&&MAXINT>=a?bitwise(a,b):gcd(a,b);return a}var isArray=require("validate.io-array"),isIntegerArray=require("validate.io-integer-array"),isFunction=require("validate.io-function"),MAXINT=Math.pow(2,53)-1;module.exports=compute},{"validate.io-array":71,"validate.io-function":72,"validate.io-integer-array":73}],71:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],72:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],73:[function(require,module){"use strict";function isIntegerArray(value){var len;if(!isArray(value))return!1;if(len=value.length,!len)return!1;for(var i=0;len>i;i++)if(!isInteger(value[i]))return!1;return!0}var isArray=require("validate.io-array"),isInteger=require("validate.io-integer");module.exports=isIntegerArray},{"validate.io-array":71,"validate.io-integer":74}],74:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":75}],75:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],76:[function(require,module){"use strict";function geq(arr,x,opts){var arity,clbk,out,len,i,isArr=isArray(x),copy=!0;if(!isArray(arr))throw new TypeError("geq()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(!isArr&&!isNumber(x)&&!isString(x))throw new TypeError("geq()::invalid input argument. Comparison input must either be an array, number primitive, or string primitive. Value: `"+x+"`.");if(arguments.length>2){if(!isObject(opts))throw new TypeError("geq()::invalid input argument. Options argument must be an object. Value: `"+opts+"`.");if(opts.hasOwnProperty("copy")&&(copy=opts.copy,!isBoolean(copy)))throw new TypeError("geq()::invalid option. Copy option must be a boolean primitive. Option: `"+copy+"`.");if(opts.hasOwnProperty("accessor")){if(clbk=opts.accessor,!isFunction(clbk))throw new TypeError("geq()::invalid option. Accessor must be a function. Option: `"+clbk+"`.");arity=clbk.length}}if(len=arr.length,out=copy?new Array(len):arr,isArr){if(len!==x.length)throw new Error("geq()::invalid input argument. Comparison array must have a length equal to that of the input array.");if(3===arity)for(i=0;len>i;i++)out[i]=clbk(arr[i],i,0)>=clbk(x[i],i,1)?1:0;else if(clbk)for(i=0;len>i;i++)out[i]=clbk(arr[i],i)>=x[i]?1:0;else for(i=0;len>i;i++)out[i]=arr[i]>=x[i]?1:0}else if(clbk)for(i=0;len>i;i++)out[i]=clbk(arr[i],i)>=x?1:0;else for(i=0;len>i;i++)out[i]=arr[i]>=x?1:0;return out}var isArray=require("validate.io-array"),isNumber=require("validate.io-number-primitive"),isString=require("validate.io-string-primitive"),isBoolean=require("validate.io-boolean-primitive"),isFunction=require("validate.io-function"),isObject=require("validate.io-object");module.exports=geq},{"validate.io-array":77,"validate.io-boolean-primitive":78,"validate.io-function":79,"validate.io-number-primitive":80,"validate.io-object":81,"validate.io-string-primitive":82}],77:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],78:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{dup:25}],79:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],80:[function(require,module){"use strict";function isNumber(value){return"number"==typeof value&&value===value}module.exports=isNumber},{}],81:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":77}],82:[function(require,module){"use strict";function isString(value){return"string"==typeof value}module.exports=isString},{}],83:[function(require,module){"use strict";function gmean(arr,clbk){if(!isArray(arr))throw new TypeError("gmean()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(arguments.length>1&&!isFunction(clbk))throw new TypeError("gmean()::invalid input argument. Accessor must be a function. Value: `"+clbk+"`.");var val,i,len=arr.length,sum=0;if(!len)return null;if(clbk)for(i=0;len>i;i++){if(val=clbk(arr[i]),0>=val)return 0/0;sum+=Math.log(val)/len}else for(i=0;len>i;i++){if(val=arr[i],0>=val)return 0/0;sum+=Math.log(val)/len}return Math.exp(sum)}var isArray=require("validate.io-array"),isFunction=require("validate.io-function");module.exports=gmean},{"validate.io-array":84,"validate.io-function":85}],84:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],85:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],86:[function(require,module){"use strict";function gt(arr,x,opts){var arity,clbk,out,len,i,isArr=isArray(x),copy=!0;if(!isArray(arr))throw new TypeError("gt()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(!isArr&&!isNumber(x)&&!isString(x))throw new TypeError("gt()::invalid input argument. Comparison input must either be an array, number primitive, or string primitive. Value: `"+x+"`.");if(arguments.length>2){if(!isObject(opts))throw new TypeError("gt()::invalid input argument. Options argument must be an object. Value: `"+opts+"`.");if(opts.hasOwnProperty("copy")&&(copy=opts.copy,!isBoolean(copy)))throw new TypeError("gt()::invalid option. Copy option must be a boolean primitive. Option: `"+copy+"`.");if(opts.hasOwnProperty("accessor")){if(clbk=opts.accessor,!isFunction(clbk))throw new TypeError("gt()::invalid option. Accessor must be a function. Option: `"+clbk+"`.");arity=clbk.length}}if(len=arr.length,out=copy?new Array(len):arr,isArr){if(len!==x.length)throw new Error("gt()::invalid input argument. Comparison array must have a length equal to that of the input array.");if(3===arity)for(i=0;len>i;i++)out[i]=clbk(arr[i],i,0)>clbk(x[i],i,1)?1:0;else if(clbk)for(i=0;len>i;i++)out[i]=clbk(arr[i],i)>x[i]?1:0;else for(i=0;len>i;i++)out[i]=arr[i]>x[i]?1:0}else if(clbk)for(i=0;len>i;i++)out[i]=clbk(arr[i],i)>x?1:0;else for(i=0;len>i;i++)out[i]=arr[i]>x?1:0;return out}var isArray=require("validate.io-array"),isNumber=require("validate.io-number-primitive"),isString=require("validate.io-string-primitive"),isBoolean=require("validate.io-boolean-primitive"),isFunction=require("validate.io-function"),isObject=require("validate.io-object");module.exports=gt},{"validate.io-array":87,"validate.io-boolean-primitive":88,"validate.io-function":89,"validate.io-number-primitive":90,"validate.io-object":91,"validate.io-string-primitive":92}],87:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],88:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{dup:25}],89:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],90:[function(require,module,exports){arguments[4][80][0].apply(exports,arguments)},{dup:80}],91:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":87}],92:[function(require,module,exports){arguments[4][82][0].apply(exports,arguments)},{dup:82}],93:[function(require,module){"use strict";function hamming(a,b,clbk){var len,d,i,aType=isString(a),bType=isString(b);if(!isArray(a)&&!aType)throw new TypeError("hamming()::invalid input argument. Sequence must be either an array or a string. Value: `"+a+"`.");if(!isArray(b)&&!bType)throw new TypeError("hamming()::invalid input argument. Sequence must be either an array or a string. Value: `"+b+"`.");if(aType!==bType)throw new TypeError("hamming()::invalid input arguments. Sequences must be the same type; i.e., both strings or both arrays.");if(arguments.length>2&&!isFunction(clbk))throw new TypeError("hamming()::invalid input argument. Accessor must be a function. Value: `"+clbk+"`.");if(len=a.length,len!==b.length)throw new Error("hamming()::invalid input arguments. Sequences must be the same length.");if(d=0,clbk)for(i=0;len>i;i++)clbk(a[i],i,0)!==clbk(b[i],i,1)&&(d+=1);else for(i=0;len>i;i++)a[i]!==b[i]&&(d+=1);return d}var isArray=require("validate.io-array"),isString=require("validate.io-string"),isFunction=require("validate.io-function");module.exports=hamming},{"validate.io-array":94,"validate.io-function":95,"validate.io-string":96}],94:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],95:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],96:[function(require,module){"use strict";function isString(value){return"string"==typeof value||"[object String]"===Object.prototype.toString.call(value)}module.exports=isString},{}],97:[function(require,module){!function(){"use strict";function hmean(arr){if(!Array.isArray(arr))throw new TypeError("hmean()::invalid input argument. Must provide an array.");for(var val,len=arr.length,sum=0,i=0;len>i;i++){if(val=arr[i],0>=val)return 0/0;sum+=1/val}return len/sum}module.exports=hmean}()},{}],98:[function(require,module){!function(){"use strict";function hypot(a,b){if(!isNumeric(a)||!isNumeric(b))throw new TypeError("hypot()::invalid input argument. Input arguments must be numeric.");var min,max,r;return a=Math.abs(a),b=Math.abs(b),a>b?(min=b,max=a):(min=a,max=b),r=min/max,max*Math.sqrt(1+r*r)}var isNumeric=require("validate.io-number");module.exports=hypot}()},{"validate.io-number":99}],99:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],100:[function(require,module){"use strict";function ascending(a,b){return a-b}function idr(arr,opts){if(!Array.isArray(arr))throw new TypeError("idr()::invalid input argument. Must provide an array.");if(arguments.length>1){if(!isObject(opts))throw new TypeError("idr()::invalid input argument. Options should be an object.")}else opts={sorted:!1};return opts.sorted||(arr=arr.slice(),arr.sort(ascending),opts.sorted=!0),quantile(arr,.9,opts)-quantile(arr,.1,opts)}var isObject=require("validate.io-object"),quantile=require("compute-quantile");module.exports=idr},{"compute-quantile":263,"validate.io-object":101}],101:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":102}],102:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],103:[function(require,module){"use strict";function validDate(value,name){var type;if(type=typeof value,"string"===type){if(value=Date.parse(value),value!==value)throw new Error("incrdatespace()::invalid input argument. Unable to parse "+name.toLowerCase()+" date.");value=new Date(value)}if("number"===type){if(!timestamp.test(value))throw new Error("incrdatespace()::invalid input argument. Numeric "+name.toLowerCase()+" date must be either a Unix or Javascript timestamp.");10===value.toString().length&&(value=1e3*value),value=new Date(value)}if(!(value instanceof Date))throw new TypeError("incrdatespace()::invalid input argument. "+name+" date must either be a date string, Date object, Unix timestamp, or JavaScript timestamp.");return value}function validIncrement(x){var parts,len,unit,val,flg,i,N=units.length,sign=!1;if("number"==typeof x){if(x!==x)throw new TypeError("incrdatespace()::invalid value. Increment must be a valid number.");return x}if("string"!=typeof x)throw new TypeError("incrdatespace()::invalid value. Increment must be either a string or number.");for("-"===x[0]&&(sign=!0,x=x.substr(1)),parts=x.split("."),len=parts.length,x=0;len;){if(flg=!1,val=parts.pop(),!fmt.test(val))throw new Error("incrdatespace()::invalid value. Scalar unit pair must have the following format: `ms`, `5ms`, `5days`, etc.");for(i=0;N>i;i++)if(unit=units[i],reUnits[unit].test(val)){flg=!0,val=parseInt(val,10),val!==val&&(val=1),x+=val*convert[unit];break}if(!flg)throw new Error("incrdatespace()::invalid value. Unrecognized unit: `"+val+"`.");len=parts.length}return sign?-x:x}function incrdatespace(start,stop,increment,options){var round,len,i,tmp,arr,nArgs=arguments.length,opts={round:"floor"},incr=convert.d,flg=!0;if(start=validDate(start,"Start"),stop=validDate(stop,"Stop"),nArgs>2&&(3===nArgs?isObject(increment)?opts=increment:(incr=increment,flg=!1):(opts=options,incr=increment),incr=validIncrement(incr),flg)){if(!isObject(opts))throw new TypeError("incrdatespace()::invalid input argument. Options must be an object.");if(opts.hasOwnProperty("round")){if("string"!=typeof opts.round)throw new TypeError("incrdatespace()::invalid input argument. Round option must be a string.");if(-1===rounders.indexOf(opts.round))throw new Error("incrdatespace()::invalid input argument. Unrecognized round option. Must be one of ["+rounders.join(",")+"].")}else opts.round="floor"}if(round=Math[opts.round],len=Math.ceil((stop-start)/incr),0>len)return[start];if(len>64e3){for(arr=[],arr.push(start),tmp=start.getTime(),i=1;len>i;i++)tmp+=incr,arr.push(new Date(round(tmp)));return arr}for(arr=new Array(len),arr[0]=start,tmp=start.getTime(),i=1;len>i;i++)tmp+=incr,arr[i]=new Date(round(tmp));return arr}var rounders,convert,timestamp,units,reUnits,fmt,isObject=require("validate.io-object");rounders=["floor","ceil","round"],units=["y","b","w","d","h","m","s","ms"],convert={ms:1,s:1e3,m:6e4,h:36e5,d:864e5,w:6048e5,b:26298e5,y:315576e5},timestamp=/^\d{10}$|^\d{13}$/,reUnits={ms:/^\d{0,}ms$|^\d{0,}millisecond$|^\d{0,}milliseconds$/,s:/^\d{0,}s$|^\d{0,}sec$|^\d{0,}secs$|^\d{0,}second$|^\d{0,}seconds$/,m:/^\d{0,}m$|^\d{0,}min$|^\d{0,}mins$|^\d{0,}minute$|^\d{0,}minutes$/,h:/^\d{0,}h$|^\d{0,}hr$|^\d{0,}hrs$|^\d{0,}hour$|^\d{0,}hours$/,d:/^\d{0,}d$|^\d{0,}day$|^\d{0,}days$/,w:/^\d{0,}w$|^\d{0,}wk$|^\d{0,}wks$|^\d{0,}week$|^\d{0,}weeks$/,b:/^\d{0,}b$|^\d{0,}month$|^\d{0,}months$/,y:/^\d{0,}y$|^\d{0,}yr$|^\d{0,}yrs$|^\d{0,}year$|^\d{0,}years$/},fmt=/^\d{0,}[a-z]+$/,module.exports=incrdatespace},{"validate.io-object":104}],104:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":105}],105:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],106:[function(require,module){"use strict";function incrmax(){var max=null;return function(x){return arguments.length?((x>max||null===max)&&(max=x),max):max}}module.exports=incrmax},{}],107:[function(require,module){"use strict";function incrmean(){var delta,mu=0,N=0;return function(x){return arguments.length?(N+=1,delta=x-mu,mu+=delta/N):mu}}module.exports=incrmean},{}],108:[function(require,module){"use strict";function incrmin(){var min=null;

return function(x){return arguments.length?((min>x||null===min)&&(min=x),min):min}}module.exports=incrmin},{}],109:[function(require,module){"use strict";function incrmmean(W){if(!isPositiveInteger(W))throw new TypeError("incrmmean()::invalid input argument. Window size must be a positive integer. Value: `"+W+"`.");var delta,arr=new Array(W),mu=0,N=0,i=-1;return function(x){return arguments.length?(i=(i+1)%W,W>N?(N+=1,delta=x-mu,mu+=delta/N):(delta=x-arr[i],mu+=delta/W),arr[i]=x,mu):0===N?null:mu}}var isPositiveInteger=require("validate.io-positive-integer");module.exports=incrmmean},{"validate.io-positive-integer":110}],110:[function(require,module,exports){arguments[4][67][0].apply(exports,arguments)},{dup:67,"validate.io-integer":111}],111:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":112}],112:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],113:[function(require,module){"use strict";function incrmstdev(W){if(!isPositiveInteger(W))throw new TypeError("incrmstdev()::invalid input argument. Window size must be a positive integer. Value: `"+W+"`.");var delta,tmp,d1,d2,arr=new Array(W),n=W-1,M2=0,mu=0,N=0,i=-1;return function(x){return arguments.length?(i=(i+1)%W,W>N?(arr[i]=x,N+=1,delta=x-mu,mu+=delta/N,M2+=delta*(x-mu),1===N?0:Math.sqrt(M2/(N-1))):1===N?0:(tmp=arr[i],arr[i]=x,delta=x-tmp,d1=tmp-mu,mu+=delta/W,d2=x-mu,M2+=delta*(d1+d2),Math.sqrt(M2/n))):0===N?null:1===N?0:Math.sqrt(W>N?M2/(N-1):M2/n)}}var isPositiveInteger=require("validate.io-positive-integer");module.exports=incrmstdev},{"validate.io-positive-integer":114}],114:[function(require,module,exports){arguments[4][67][0].apply(exports,arguments)},{dup:67,"validate.io-integer":115}],115:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":116}],116:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],117:[function(require,module){"use strict";function incrmsum(W){if(!isPositiveInteger(W))throw new TypeError("incrmsum()::invalid input argument. Window size must be a positive integer. Value: `"+W+"`.");var arr=new Array(W),sum=0,N=0,i=-1;return function(x){return arguments.length?(i=(i+1)%W,W>N?(N+=1,sum+=x):sum+=x-arr[i],arr[i]=x,sum):0===N?null:sum}}var isPositiveInteger=require("validate.io-positive-integer");module.exports=incrmsum},{"validate.io-positive-integer":118}],118:[function(require,module,exports){arguments[4][67][0].apply(exports,arguments)},{dup:67,"validate.io-integer":119}],119:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":120}],120:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],121:[function(require,module){"use strict";function incrmvariance(W){if(!isPositiveInteger(W))throw new TypeError("incrmvariance()::invalid input argument. Window size must be a positive integer. Value: `"+W+"`.");var delta,tmp,d1,d2,arr=new Array(W),n=W-1,M2=0,mu=0,N=0,i=-1;return function(x){return arguments.length?(i=(i+1)%W,W>N?(arr[i]=x,N+=1,delta=x-mu,mu+=delta/N,M2+=delta*(x-mu),1===N?0:M2/(N-1)):1===N?0:(tmp=arr[i],arr[i]=x,delta=x-tmp,d1=tmp-mu,mu+=delta/W,d2=x-mu,M2+=delta*(d1+d2),M2/n)):0===N?null:1===N?0:W>N?M2/(N-1):M2/n}}var isPositiveInteger=require("validate.io-positive-integer");module.exports=incrmvariance},{"validate.io-positive-integer":122}],122:[function(require,module,exports){arguments[4][67][0].apply(exports,arguments)},{dup:67,"validate.io-integer":123}],123:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":124}],124:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],125:[function(require,module){"use strict";function incrspace(x1,x2,increment){var arr,len,inc,i;if(!isNumber(x1))throw new TypeError("incrspace()::invalid input argument. Start must be numeric. Value: `"+x1+"`.");if(!isNumber(x2))throw new TypeError("incrspace()::invalid input argument. Stop must be numeric. Value: `"+x2+"`.");if(arguments.length<3)inc=1;else if(inc=increment,!isNumber(inc))throw new TypeError("incrspace()::invalid input argument. Increment must be numeric. Value: `"+inc+"`.");if(len=Math.ceil((x2-x1)/inc),len>MAXLENGTH)throw new RangeError("incrspace()::invalid input arguments. Generated array exceeds maximum array length.");if(1>=len)return[x1];if(len>64e3)for(arr=[],arr.push(x1),i=1;len>i;i++)arr.push(x1+inc*i);else for(arr=new Array(len),arr[0]=x1,i=1;len>i;i++)arr[i]=x1+inc*i;return arr}var isNumber=require("validate.io-number-primitive"),MAXLENGTH=Math.pow(2,32)-1;module.exports=incrspace},{"validate.io-number-primitive":126}],126:[function(require,module,exports){arguments[4][80][0].apply(exports,arguments)},{dup:80}],127:[function(require,module){!function(){"use strict";function incrstdev(){var delta,mu=0,N=0,M2=0;return function(x){return arguments.length?(N+=1,delta=x-mu,mu+=delta/N,M2+=delta*(x-mu),2>N?0:Math.sqrt(M2/(N-1))):2>N?0:Math.sqrt(M2/(N-1))}}module.exports=incrstdev}()},{}],128:[function(require,module){"use strict";function incrsum(){var sum=0;return function(x){return arguments.length?sum+=x:sum}}module.exports=incrsum},{}],129:[function(require,module){!function(){"use strict";function incrvariance(){var delta,mu=0,N=0,M2=0;return function(x){return arguments.length?(N+=1,delta=x-mu,mu+=delta/N,M2+=delta*(x-mu),2>N?0:M2/(N-1)):2>N?0:M2/(N-1)}}module.exports=incrvariance}()},{}],130:[function(require,module){"use strict";function indexspace(str,len){var x1,x2,tmp,inc,arr;if(!isString(str)||!re.test(str))throw new Error("indexspace()::invalid input argument. Invalid subsequence syntax. Please consult documentation. Value: `"+str+"`.");if(!isNonNegativeInteger(len))throw new TypeError("indexspace()::invalid input argument. Reference array length must be a nonnegative integer. Value: `"+len+"`.");if(!len)return[];if(str=str.split(":"),x1=str[0],x2=str[1],inc=2===str.length?1:parseInt(str[2],10),0===inc)throw new Error("indexspace()::invalid syntax. Increment must be an integer not equal to 0. Value: `"+inc+"`.");if(reEnd.test(x1))tmp=x1.match(reMatch),tmp?"-"===tmp[1]?(x1=len-1-parseInt(tmp[2],10),0>x1&&(x1=0)):(x1=(len-1)/parseInt(tmp[2],10),x1=Math.ceil(x1)):x1=len-1;else if(x1=parseInt(x1,10),x1!==x1)x1=0>inc?len-1:0;else if(0>x1)x1=len+x1,0>x1&&(x1=0);else if(x1>=len)return[];if(reEnd.test(x2)?(tmp=x2.match(reMatch),tmp?"-"===tmp[1]?(x2=len-1-parseInt(tmp[2],10),0>x2&&(x2=0)):(x2=(len-1)/parseInt(tmp[2],10),x2=Math.ceil(x2)-1):x2=len-1):(x2=parseInt(x2,10),x2!==x2?x2=0>inc?0:len-1:0>x2?(x2=len+x2,0>x2&&(x2=0),inc>0&&(x2-=1)):0>inc?x2+=1:x2>=len?x2=len-1:x2-=1),arr=[],0>inc){if(x2>x1)return arr;for(;x1>=x2;)arr.push(x1),x1+=inc}else{if(x1>x2)return arr;for(;x2>=x1;)arr.push(x1),x1+=inc}return arr}var isString=require("validate.io-string-primitive"),isNonNegativeInteger=require("validate.io-nonnegative-integer"),re=/^(?:(?:-(?=\d+))?\d*|end(?:-\d+|\/\d+)?):(?:(?:-(?=\d+))?\d*|end(?:-\d+|\/\d+)?)(?:\:(?=-?\d*)(?:-?\d+)?)?$/,reEnd=/^end/,reMatch=/(-|\/)(?=\d+)(\d+)?$/;module.exports=indexspace},{"validate.io-nonnegative-integer":131,"validate.io-string-primitive":134}],131:[function(require,module,exports){arguments[4][62][0].apply(exports,arguments)},{dup:62,"validate.io-integer":132}],132:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":133}],133:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],134:[function(require,module,exports){arguments[4][82][0].apply(exports,arguments)},{dup:82}],135:[function(require,module){"use strict";function ascending(a,b){return a-b}function iqr(arr,opts){if(!Array.isArray(arr))throw new TypeError("iqr()::invalid input argument. Must provide an array.");if(arguments.length>1){if(!isObject(opts))throw new TypeError("iqr()::invalid input argument. Options should be an object.")}else opts={sorted:!1};return opts.sorted||(arr=arr.slice(),arr.sort(ascending),opts.sorted=!0),quantile(arr,.75,opts)-quantile(arr,.25,opts)}var isObject=require("validate.io-object"),quantile=require("compute-quantile");module.exports=iqr},{"compute-quantile":263,"validate.io-object":136}],136:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":137}],137:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],138:[function(require,module){"use strict";function isfinite(arr){if(!Array.isArray(arr))throw new TypeError("isfinite()::invalid input argument. Must provide an array.");for(var val,len=arr.length,out=new Array(len),i=0;len>i;i++)out[i]=0,val=arr[i],"number"==typeof val&&val===val&&pinf>val&&val>ninf&&(out[i]=1);return out}var pinf=Number.POSITIVE_INFINITY,ninf=Number.NEGATIVE_INFINITY;module.exports=isfinite},{}],139:[function(require,module){"use strict";function isinf(arr){if(!Array.isArray(arr))throw new TypeError("isinf()::invalid input argument. Must provide an array.");for(var val,len=arr.length,out=new Array(len),i=0;len>i;i++)out[i]=0,val=arr[i],(val===pinf||val===ninf)&&(out[i]=1);return out}var pinf=Number.POSITIVE_INFINITY,ninf=Number.NEGATIVE_INFINITY;module.exports=isinf},{}],140:[function(require,module){"use strict";function isinteger(arr){if(!Array.isArray(arr))throw new TypeError("isinteger()::invalid input argument. Must provide an array.");for(var val,len=arr.length,out=new Array(len),i=0;len>i;i++)out[i]=0,val=arr[i],"number"==typeof val&&val===val&&val%1===0&&(out[i]=1);return out}module.exports=isinteger},{}],141:[function(require,module){"use strict";function isnan(arr){if(!Array.isArray(arr))throw new TypeError("isnan()::invalid input argument. Must provide an array.");for(var val,len=arr.length,out=new Array(len),i=0;len>i;i++)out[i]=0,val=arr[i],("number"!=typeof val||val!==val)&&(out[i]=1);return out}module.exports=isnan},{}],142:[function(require,module){"use strict";function isnumeric(arr){if(!Array.isArray(arr))throw new TypeError("isnumeric()::invalid input argument. Must provide an array.");for(var val,len=arr.length,out=new Array(len),i=0;len>i;i++)out[i]=0,val=arr[i],"number"==typeof val&&val===val&&(out[i]=1);return out}module.exports=isnumeric},{}],143:[function(require,module){"use strict";function issorted(arr,clbk){if(!Array.isArray(arr))throw new TypeError("issorted()::invalid input argument. Must provide an array.");if(arguments.length>1&&"function"!=typeof clbk)throw new TypeError("issorted()::invalid input argument. Comparator must be a function.");var i,len=arr.length;if(!clbk){for(i=0;len-1>i;i++)if(arr[i]>arr[i+1])return!1;return!0}for(i=0;len-1>i;i++)if(clbk(arr[i],arr[i+1])>0)return!1;return!0}module.exports=issorted},{}],144:[function(require,module){!function(){"use strict";function kurtosis(arr){if(!Array.isArray(arr))throw new TypeError("kurtosis()::invalid input argument. Must provide an array.");for(var g,len=arr.length,delta=0,delta_n=0,delta_n2=0,term1=0,N=0,mean=0,M2=0,M3=0,M4=0,i=0;len>i;i++)N+=1,delta=arr[i]-mean,delta_n=delta/N,delta_n2=delta_n*delta_n,term1=delta*delta_n*(N-1),M4+=term1*delta_n2*(N*N-3*N+3)+6*delta_n2*M2-4*delta_n*M3,M3+=term1*delta_n*(N-2)-3*delta_n*M2,M2+=term1,mean+=delta_n;return g=N*M4/(M2*M2)-3,(N-1)/((N-2)*(N-3))*((N+1)*g+6)}module.exports=kurtosis}()},{}],145:[function(require,module){!function(){"use strict";function l1norm(arr){if(!Array.isArray(arr))throw new TypeError("l1norm()::invalid input argument. Must provide an array.");for(var val,len=arr.length,sum=0,i=0;len>i;i++)val=arr[i],0>val&&(val=-val),sum+=val;return sum}module.exports=l1norm}()},{}],146:[function(require,module){"use strict";function l2norm(arr,clbk){if(!isArray(arr))throw new TypeError("l2norm()::invalid input argument. Must provide an array.  Value: `"+arr+"`.");if(arguments.length>1&&!isFunction(clbk))throw new TypeError("l2norm()::invalid input argument. Accessor must be a function. Value: `"+clbk+"`.");var r,val,abs,i,len=arr.length,t=0,s=1;if(!len)return null;if(clbk)for(i=0;len>i;i++)val=clbk(arr[i],i),abs=0>val?-val:val,abs>0&&(abs>t?(r=t/val,s=1+s*r*r,t=abs):(r=val/t,s+=r*r));else for(i=0;len>i;i++)val=arr[i],abs=0>val?-val:val,abs>0&&(abs>t?(r=t/val,s=1+s*r*r,t=abs):(r=val/t,s+=r*r));return t*Math.sqrt(s)}var isArray=require("validate.io-array"),isFunction=require("validate.io-function");module.exports=l2norm},{"validate.io-array":147,"validate.io-function":148}],147:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],148:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],149:[function(require,module){"use strict";function lcm(){var args,clbk,arr,len,a,b,i,nargs=arguments.length;for(args=new Array(nargs),i=0;nargs>i;i++)args[i]=arguments[i];if(isIntegerArray(args)){if(2===nargs)return a=args[0],b=args[1],0>a&&(a=-a),0>b&&(b=-b),0===a||0===b?0:a/gcd(a,b)*b;arr=args}else{if(!isArray(args[0]))throw new TypeError("lcm()::invalid input argument. Must provide an array of integers. Value: `"+args[0]+"`.");if(nargs>1){if(arr=args[0],clbk=args[1],!isFunction(clbk))throw new TypeError("lcm()::invalid input argument. Accessor must be a function. Value: `"+clbk+"`.")}else arr=args[0]}if(len=arr.length,2>len)return null;if(clbk){for(a=new Array(len),i=0;len>i;i++)a[i]=clbk(arr[i],i);arr=a}if(3>nargs&&!isIntegerArray(arr))throw new TypeError("lcm()::invalid input argument. Accessed array values must be integers. Value: `"+arr+"`.");for(i=0;len>i;i++)a=arr[i],0>a&&(arr[i]=-a);for(a=arr[0],i=1;len>i;i++){if(b=arr[i],0===a||0===b)return 0;a=a/gcd(a,b)*b}return a}var gcd=require("compute-gcd"),isArray=require("validate.io-array"),isIntegerArray=require("validate.io-integer-array"),isFunction=require("validate.io-function");module.exports=lcm},{"compute-gcd":70,"validate.io-array":150,"validate.io-function":151,"validate.io-integer-array":152}],150:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],151:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],152:[function(require,module,exports){arguments[4][73][0].apply(exports,arguments)},{dup:73,"validate.io-array":150,"validate.io-integer":153}],153:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":154}],154:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],155:[function(require,module){"use strict";function leq(arr,x,opts){var arity,clbk,out,len,i,isArr=isArray(x),copy=!0;if(!isArray(arr))throw new TypeError("leq()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(!isArr&&!isNumber(x)&&!isString(x))throw new TypeError("leq()::invalid input argument. Comparison input must either be an array, number primitive, or string primitive. Value: `"+x+"`.");if(arguments.length>2){if(!isObject(opts))throw new TypeError("leq()::invalid input argument. Options argument must be an object. Value: `"+opts+"`.");if(opts.hasOwnProperty("copy")&&(copy=opts.copy,!isBoolean(copy)))throw new TypeError("leq()::invalid option. Copy option must be a boolean primitive. Option: `"+copy+"`.");if(opts.hasOwnProperty("accessor")){if(clbk=opts.accessor,!isFunction(clbk))throw new TypeError("leq()::invalid option. Accessor must be a function. Option: `"+clbk+"`.");arity=clbk.length}}if(len=arr.length,out=copy?new Array(len):arr,isArr){if(len!==x.length)throw new Error("leq()::invalid input argument. Comparison array must have a length equal to that of the input array.");if(3===arity)for(i=0;len>i;i++)out[i]=clbk(arr[i],i,0)<=clbk(x[i],i,1)?1:0;else if(clbk)for(i=0;len>i;i++)out[i]=clbk(arr[i],i)<=x[i]?1:0;else for(i=0;len>i;i++)out[i]=arr[i]<=x[i]?1:0}else if(clbk)for(i=0;len>i;i++)out[i]=clbk(arr[i],i)<=x?1:0;else for(i=0;len>i;i++)out[i]=arr[i]<=x?1:0;return out}var isArray=require("validate.io-array"),isNumber=require("validate.io-number-primitive"),isString=require("validate.io-string-primitive"),isBoolean=require("validate.io-boolean-primitive"),isFunction=require("validate.io-function"),isObject=require("validate.io-object");module.exports=leq},{"validate.io-array":156,"validate.io-boolean-primitive":157,"validate.io-function":158,"validate.io-number-primitive":159,"validate.io-object":160,"validate.io-string-primitive":161}],156:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],157:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{dup:25}],158:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],159:[function(require,module,exports){arguments[4][80][0].apply(exports,arguments)},{dup:80}],160:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":156}],161:[function(require,module,exports){arguments[4][82][0].apply(exports,arguments)},{dup:82}],162:[function(require,module){!function(){"use strict";function linfnorm(arr){if(!Array.isArray(arr))throw new TypeError("linfnorm()::invalid input argument. Must provide an array.");var max,len=arr.length,val=arr[0];0>val&&(val=-val),max=val;for(var i=1;len>i;i++)val=arr[i],0>val&&(val=-val),val>max&&(max=val);return max}module.exports=linfnorm}()},{}],163:[function(require,module){"use strict";function ascending(a,b){return a-b}function lmidmean(arr,sorted){if(!Array.isArray(arr))throw new TypeError("lmidmean()::invalid input argument. Must provide an array.");if(arguments.length>1&&"boolean"!=typeof sorted)throw new TypeError("lmidmean()::invalid input argument. Second argument must be a boolean.");if(arr.length<6)throw new Error("lmidmean()::invalid input argument. Input array must have 6 or more elements.");sorted||(arr=arr.slice(),arr.sort(ascending));var delta,low,high,len=arr.length,mean=0,N=0;len%8===0?(low=.125*len,high=.375*len-1):(low=Math.ceil(.125*len),high=Math.floor(.375*len)-1);for(var i=low;high>=i;i++)N+=1,delta=arr[i]-mean,mean+=delta/N;return mean}module.exports=lmidmean},{}],164:[function(require,module){"use strict";function logspace(a,b,len){var arr,end,tmp,d;if("number"!=typeof a||a!==a)throw new TypeError("logspace()::invalid input argument. Exponent of start value must be numeric.");if("number"!=typeof b||b!==b)throw new TypeError("logspace()::invalid input argument. Exponent of stop value must be numeric.");if(arguments.length<3)len=10;else{if(!isInteger(len)||0>len)throw new TypeError("logspace()::invalid input argument. Length must be a positive integer.");if(0===len)return[]}end=len-1,d=(b-a)/end,arr=new Array(len),tmp=a,arr[0]=Math.pow(10,tmp);for(var i=1;end>i;i++)tmp+=d,arr[i]=Math.pow(10,tmp);return arr[end]=Math.pow(10,b),arr}var isInteger=require("validate.io-integer");module.exports=logspace},{"validate.io-integer":165}],165:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":166}],166:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],167:[function(require,module){!function(){"use strict";function lpnorm(arr,p){var inf=Number.POSITIVE_INFINITY;if(!Array.isArray(arr))throw new TypeError("lpnorm()::invalid input argument. First argument must be an array.");if(1===arguments.length)p=2;else if(!isInteger(p)&&p!==inf||1>p)throw new TypeError("lpnorm()::invalid input argument. Second argument should be a positive integer greater than 0.");if(1===p)return l1norm(arr);if(2===p)return l2norm(arr);if(p===inf)return linfnorm(arr);for(var val,len=arr.length,sum=0,i=0;len>i;i++)val=arr[i],0>val&&(val=-val),sum+=Math.pow(val,p);return Math.pow(sum,1/p)}var isInteger=require("validate.io-integer"),l1norm=require("compute-l1norm"),l2norm=require("compute-l2norm"),linfnorm=require("compute-linfnorm");module.exports=lpnorm}()},{"compute-l1norm":145,"compute-l2norm":146,"compute-linfnorm":162,"validate.io-integer":168}],168:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":169}],169:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],170:[function(require,module){"use strict";function lt(arr,x,opts){var arity,clbk,out,len,i,isArr=isArray(x),copy=!0;if(!isArray(arr))throw new TypeError("lt()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(!isArr&&!isNumber(x)&&!isString(x))throw new TypeError("lt()::invalid input argument. Comparison input must either be an array, number primitive, or string primitive. Value: `"+x+"`.");if(arguments.length>2){if(!isObject(opts))throw new TypeError("lt()::invalid input argument. Options argument must be an object. Value: `"+opts+"`.");if(opts.hasOwnProperty("copy")&&(copy=opts.copy,!isBoolean(copy)))throw new TypeError("lt()::invalid option. Copy option must be a boolean primitive. Option: `"+copy+"`.");if(opts.hasOwnProperty("accessor")){if(clbk=opts.accessor,!isFunction(clbk))throw new TypeError("lt()::invalid option. Accessor must be a function. Option: `"+clbk+"`.");arity=clbk.length}}if(len=arr.length,out=copy?new Array(len):arr,isArr){if(len!==x.length)throw new Error("lt()::invalid input argument. Comparison array must have a length equal to that of the input array.");if(3===arity)for(i=0;len>i;i++)out[i]=clbk(arr[i],i,0)<clbk(x[i],i,1)?1:0;else if(clbk)for(i=0;len>i;i++)out[i]=clbk(arr[i],i)<x[i]?1:0;else for(i=0;len>i;i++)out[i]=arr[i]<x[i]?1:0}else if(clbk)for(i=0;len>i;i++)out[i]=clbk(arr[i],i)<x?1:0;else for(i=0;len>i;i++)out[i]=arr[i]<x?1:0;return out}var isArray=require("validate.io-array"),isNumber=require("validate.io-number-primitive"),isString=require("validate.io-string-primitive"),isBoolean=require("validate.io-boolean-primitive"),isFunction=require("validate.io-function"),isObject=require("validate.io-object");module.exports=lt},{"validate.io-array":171,"validate.io-boolean-primitive":172,"validate.io-function":173,"validate.io-number-primitive":174,"validate.io-object":175,"validate.io-string-primitive":176}],171:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],172:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{dup:25}],173:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],174:[function(require,module,exports){arguments[4][80][0].apply(exports,arguments)},{dup:80}],175:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":171}],176:[function(require,module,exports){arguments[4][82][0].apply(exports,arguments)},{dup:82}],177:[function(require,module){"use strict";function max(arr){if(!Array.isArray(arr))throw new TypeError("max()::invalid input argument. Must provide an array.");for(var len=arr.length,val=arr[0],i=1;len>i;i++)arr[i]>val&&(val=arr[i]);return val}module.exports=max},{}],178:[function(require,module){!function(){"use strict";function mean(arr){if(!Array.isArray(arr))throw new TypeError("mean()::invalid input argument. Must provide an array.");for(var len=arr.length,N=0,mu=0,diff=0,i=0;len>i;i++)N+=1,diff=arr[i]-mu,mu+=diff/N;return mu}module.exports=mean}()},{}],179:[function(require,module){"use strict";function ascending(a,b){return a-b}function median(arr,options){var sorted,clbk,len,id,d,i;if(!isArray(arr))throw new TypeError("median()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(arguments.length>1){if(!isObject(options))throw new TypeError("median()::invalid input argument. Options must be an object. Value: `"+options+"`.");if(options.hasOwnProperty("sorted")&&(sorted=options.sorted,!isBoolean(sorted)))throw new TypeError("median()::invalid option. Sorted flag must be a boolean. Option: `"+sorted+"`.");if(options.hasOwnProperty("accessor")&&(clbk=options.accessor,!isFunction(clbk)))throw new TypeError("median()::invalid option. Accessor must be a function. Option: `"+clbk+"`.")}if(len=arr.length,!len)return null;if(!clbk&&sorted)d=arr;else if(clbk)for(d=[],i=0;len>i;i++)d.push(clbk(arr[i]));else for(d=[],i=0;len>i;i++)d.push(arr[i]);return sorted||d.sort(ascending),id=Math.floor(len/2),len%2?d[id]:(d[id-1]+d[id])/2}var isArray=require("validate.io-array"),isObject=require("validate.io-object"),isBoolean=require("validate.io-boolean"),isFunction=require("validate.io-function");module.exports=median},{"validate.io-array":180,"validate.io-boolean":181,"validate.io-function":182,"validate.io-object":183}],180:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],181:[function(require,module){"use strict";function isBoolean(value){return"boolean"==typeof value||"[object Boolean]"===Object.prototype.toString.call(value)}module.exports=isBoolean},{}],182:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],183:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":180}],184:[function(require,module){"use strict";function ascending(a,b){return a-b}function midhinge(arr,opts){if(!Array.isArray(arr))throw new TypeError("midhinge()::invalid input argument. Must provide an array.");if(arguments.length>1){if(!isObject(opts))throw new TypeError("midhinge()::invalid input argument. Options should be an object.")}else opts={sorted:!1};return opts.sorted||(arr=arr.slice(),arr.sort(ascending),opts.sorted=!0),(quantile(arr,.25,opts)+quantile(arr,.75,opts))/2}var isObject=require("validate.io-object"),quantile=require("compute-quantile");module.exports=midhinge},{"compute-quantile":263,"validate.io-object":185}],185:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":186}],186:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],187:[function(require,module){"use strict";function ascending(a,b){return a-b}function midmean(arr,sorted){if(!Array.isArray(arr))throw new TypeError("midmean()::invalid input argument. Must provide an array.");if(arguments.length>1&&"boolean"!=typeof sorted)throw new TypeError("midmean()::invalid input argument. Second argument must be a boolean.");if(arr.length<3)throw new TypeError("midmean()::invalid input argument. Midmean not applicable.");sorted||(arr=arr.slice(),arr.sort(ascending));var delta,low,high,len=arr.length,mean=0,N=0;len%4===0?(low=.25*len,high=.75*len-1):(low=Math.ceil(.25*len),high=Math.floor(.75*len)-1);for(var i=low;high>=i;i++)N+=1,delta=arr[i]-mean,mean+=delta/N;return mean}module.exports=midmean},{}],188:[function(require,module){"use strict";function midrange(arr,sorted){if(!Array.isArray(arr))throw new TypeError("midrange()::invalid input argument. Must provide an array.");if(arguments.length>1&&"boolean"!=typeof sorted)throw new TypeError("midrange()::invalid input argument. Sorted flag should be a boolean.");var val,min,max,len=arr.length;if(sorted)min=arr[0],max=arr[len-1];else{min=arr[0],max=arr[0];for(var i=1;len>i;i++)val=arr[i],val>max?max=val:min>val&&(min=val)}return(min+max)/2}module.exports=midrange},{}],189:[function(require,module){"use strict";function ascending(a,b){return a-b}function midsummary(arr,n,opts){if(!Array.isArray(arr))throw new TypeError("midsummary()::invalid input argument. Must provide an array.");if("number"!=typeof n||n!==n)throw new TypeError("midsummary()::invalid input argument. Percentage must be numeric.");if(0>n||n>.5)throw new TypeError("midsummary()::invalid input argument. Must provide a percentage between 0 and 0.5 inclusive.");if(arguments.length>2){if(!isObject(opts))throw new TypeError("midsummary()::invalid input argument. Options should be an object.")}else opts={sorted:!1};opts.sorted||(arr=arr.slice(),arr.sort(ascending),opts.sorted=!0);var len=arr.length,el=0;return 0===n?(arr[0]+arr[len-1])/2:.5===n?(el=Math.floor(len/2),len%2?arr[el]:(arr[el]+arr[el-1])/2):(quantile(arr,n,opts)+quantile(arr,1-n,opts))/2}var isObject=require("validate.io-object"),quantile=require("compute-quantile");module.exports=midsummary},{"compute-quantile":263,"validate.io-object":190}],190:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":191}],191:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],192:[function(require,module){"use strict";function min(arr){if(!Array.isArray(arr))throw new TypeError("min()::invalid input argument. Must provide an array.");for(var len=arr.length,val=arr[0],i=1;len>i;i++)arr[i]<val&&(val=arr[i]);return val}module.exports=min},{}],193:[function(require,module){!function(){"use strict";function mmax(arr,W){if(!Array.isArray(arr))throw new TypeError("mmax()::invalid input argument. Must provide an array.");if("number"!=typeof W||W!==W)throw new TypeError("mmax()::invalid input argument. Window must be numeric.");if(Math.floor(W)!==W||1>W)throw new TypeError("mmax()::invalid input argument. Window must be a positive integer.");if(W>arr.length)throw new TypeError("mmax()::invalid input argument. Window cannot exceed array length.");var val,i,j,k,n,len=arr.length,out=new Array(len-W+1),max=arr[0];for(i=1;W>i;i++)val=arr[i],val>max&&(max=val);for(out[0]=max,j=W;len>j;j++){if(val=arr[j],k=j-W,val>max)max=val;else if(arr[k]===max&&max>val)for(max=arr[k+1],n=k+2;j>=n;n++)val=arr[n],val>max&&(max=val);out[k+1]=max}return out}module.exports=mmax}()},{}],194:[function(require,module){"use strict";function mmean(arr,W,options){var clbk,copy=!0;if(!isArray(arr))throw new TypeError("mmean()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(!isPositiveInteger(W))throw new TypeError("mmean()::invalid input argument. Window must be a positive integer. Value: `"+W+"`.");if(arguments.length>2){if(!isObject(options))throw new TypeError("mmean()::invalid input argument. Options must be an object. Value: `"+options+"`.");if(options.hasOwnProperty("accessor")&&(clbk=options.accessor,!isFunction(clbk)))throw new TypeError("mmean()::invalid option. Accessor option must be a function. Value: `"+clbk+"`.");if(options.hasOwnProperty("copy")&&(copy=options.copy,!isBoolean(copy)))throw new TypeError("mmean()::invalid option. Copy option must be a boolean primitive. Value: `"+copy+"`.")}if(W>arr.length)throw new Error("mmean()::invalid input argument. Window cannot exceed the array length.");var out,len=arr.length,delta=0,mu=0,dropVal=0;if(copy&&!clbk){len=len-W+1,out=new Array(len);for(var i=0;W>i;i++)delta=arr[i]-mu,mu+=delta/(i+1);out[0]=mu;for(var j=0;len-1>j;j++)delta=arr[j+W]-arr[j],mu+=delta/W,out[j+1]=mu;return out}if(clbk)if(copy){out=new Array(len);for(var i=0;len>i;i++)out[i]=clbk(arr[i])}else{out=arr;for(var i=0;len>i;i++)out[i]=clbk(arr[i])}else out=arr;len=len-W+1;for(var i=0;W>i;i++)delta=out[i]-mu,mu+=delta/(i+1);dropVal=out[0],out[0]=mu;for(var j=1;len>j;j++)delta=out[j+W-1]-dropVal,mu+=delta/W,dropVal=out[j],out[j]=mu;return out.length=len,out}var isArray=require("validate.io-array"),isObject=require("validate.io-object"),isBoolean=require("validate.io-boolean-primitive"),isPositiveInteger=require("validate.io-positive-integer"),isFunction=require("validate.io-function");module.exports=mmean},{"validate.io-array":195,"validate.io-boolean-primitive":196,"validate.io-function":197,"validate.io-object":198,"validate.io-positive-integer":199}],195:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],196:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{dup:25}],197:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],198:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":195}],199:[function(require,module,exports){arguments[4][67][0].apply(exports,arguments)},{dup:67,"validate.io-integer":200}],200:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments);

},{dup:4,"validate.io-number":201}],201:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],202:[function(require,module){!function(){"use strict";function mmin(arr,W){if(!Array.isArray(arr))throw new TypeError("mmin()::invalid input argument. Must provide an array.");if("number"!=typeof W||W!==W)throw new TypeError("mmin()::invalid input argument. Window must be numeric.");if(Math.floor(W)!==W||1>W)throw new TypeError("mmin()::invalid input argument. Window must be a positive integer.");if(W>arr.length)throw new TypeError("mmin()::invalid input argument. Window cannot exceed array length.");var val,i,j,k,n,len=arr.length,out=new Array(len-W+1),min=arr[0];for(i=1;W>i;i++)val=arr[i],min>val&&(min=val);for(out[0]=min,j=W;len>j;j++){if(val=arr[j],k=j-W,min>val)min=val;else if(arr[k]===min&&val>min)for(min=arr[k+1],n=k+2;j>=n;n++)val=arr[n],min>val&&(min=val);out[k+1]=min}return out}module.exports=mmin}()},{}],203:[function(require,module){!function(){"use strict";function mode(arr){if(!Array.isArray(arr))throw new TypeError("mode()::invalid input argument. Must provide an array.");for(var val,len=arr.length,count={},max=0,vals=[],i=0;len>i;i++)val=arr[i],count[val]||(count[val]=0),count[val]+=1,count[val]===max?vals.push(val):(max=count[val],vals=[val]);return vals.sort(function(a,b){return a-b})}module.exports=mode}()},{}],204:[function(require,module){"use strict";function mprod(arr,W,clbk){var len,out,val,p,i,j;if(!isArray(arr))throw new TypeError("mprod()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(len=arr.length,!isPositiveInteger(W))throw new TypeError("mprod()::invalid input argument. Window must be a positive integer. Value: `"+W+"`.");if(W>len)throw new Error("mprod()::invalid input argument. Window cannot exceed the array length.");if(arguments.length>2&&"function"!=typeof clbk)throw new TypeError("mprod()::invalid input argument. Accessor must be a function. Value: `"+clbk+"`.");if(len=len-W+1,out=new Array(len),clbk)for(i=0;len>i;i++){for(p=1,j=i;i+W>j;j++){if(val=clbk(arr[j]),0===val){p=0;break}p*=val}out[i]=p}else for(i=0;len>i;i++){for(p=1,j=i;i+W>j;j++){if(val=arr[j],0===val){p=0;break}p*=val}out[i]=p}return out}var isArray=require("validate.io-array"),isPositiveInteger=require("validate.io-positive-integer");module.exports=mprod},{"validate.io-array":205,"validate.io-positive-integer":206}],205:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],206:[function(require,module,exports){arguments[4][67][0].apply(exports,arguments)},{dup:67,"validate.io-integer":207}],207:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":208}],208:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],209:[function(require,module){"use strict";function mstdev(arr,W){if(!Array.isArray(arr))throw new TypeError("mstdev()::invalid input argument. Must provide an array.");if("number"!=typeof W||W!==W)throw new TypeError("mstdev()::invalid input argument. Window must be numeric.");if(W%1!==0||1>W)throw new TypeError("mstdev()::invalid input argument. Window must be a positive integer.");if(W>arr.length)throw new TypeError("mstdev()::invalid input argument. Window cannot exceed the array length.");var delta,x1,x2,d1,d2,i,j,len=arr.length,out=new Array(len-W+1),n=W-1,mu=0,M2=0;if(1===W){for(i=0;i<out.length;i++)out[i]=0;return out}for(i=0;W>i;i++)x1=arr[i],delta=x1-mu,mu+=delta/(i+1),M2+=delta*(x1-mu);for(out[0]=Math.sqrt(M2/n),j=W;len>j;j++)i=j-W,x1=arr[i],x2=arr[j],delta=x2-x1,d1=x1-mu,mu+=delta/W,d2=x2-mu,M2+=delta*(d1+d2),out[i+1]=Math.sqrt(M2/n);return out}module.exports=mstdev},{}],210:[function(require,module){"use strict";function msum(arr,W,options){var clbk,len,sum,dropVal,out,i,copy=!0;if(!isArray(arr))throw new TypeError("msum()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(!isPositiveInteger(W))throw new TypeError("msum()::invalid input argument. Window must be a positive integer. Value: `"+W+"`.");if(arguments.length>2){if(!isObject(options))throw new TypeError("msum()::invalid input argument. Options must be an object. Value: `"+options+"`.");if(options.hasOwnProperty("accessor")&&(clbk=options.accessor,!isFunction(clbk)))throw new TypeError("msum()::invalid option. Accessor option must be a function. Value: `"+clbk+"`.");if(options.hasOwnProperty("copy")&&(copy=options.copy,!isBoolean(copy)))throw new TypeError("msum()::invalid option. Copy option must be a boolean primitive. Value: `"+copy+"`.")}if(W>arr.length)throw new Error("msum()::invalid input argument. Window cannot exceed the array length.");if(len=arr.length,sum=0,copy&&!clbk){for(len=len-W+1,out=new Array(len),i=0;W>i;i++)sum+=arr[i];for(out[0]=sum,i=0;len-1>i;i++)sum+=arr[i+W]-arr[i],out[i+1]=sum;return out}if(clbk)if(copy)for(out=new Array(len),i=0;len>i;i++)out[i]=clbk(arr[i]);else for(out=arr,i=0;len>i;i++)out[i]=clbk(arr[i]);else out=arr;for(len=len-W+1,i=0;W>i;i++)sum+=out[i];for(dropVal=out[0],out[0]=sum,i=1;len>i;i++)sum+=out[i+W-1]-dropVal,dropVal=out[i],out[i]=sum;return out.length=len,out}var isArray=require("validate.io-array"),isObject=require("validate.io-object"),isBoolean=require("validate.io-boolean-primitive"),isPositiveInteger=require("validate.io-positive-integer"),isFunction=require("validate.io-function");module.exports=msum},{"validate.io-array":211,"validate.io-boolean-primitive":212,"validate.io-function":213,"validate.io-object":214,"validate.io-positive-integer":215}],211:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],212:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{dup:25}],213:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],214:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":211}],215:[function(require,module,exports){arguments[4][67][0].apply(exports,arguments)},{dup:67,"validate.io-integer":216}],216:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":217}],217:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],218:[function(require,module){"use strict";function multiply(arr,x){var len,i,isArray=Array.isArray(x);if(!Array.isArray(arr))throw new TypeError("multiply()::invalid input argument. Must provide an array.");if(len=arr.length,!isArray&&("number"!=typeof x||x!==x))throw new TypeError("multiply()::invalid input argument. Second argument must be either an array or a scalar.");if(isArray){if(len!==x.length)throw new Error("multiply()::invalid input argument. Arrays must be of equal length.");for(i=0;len>i;i++)arr[i]*=x[i]}else for(i=0;len>i;i++)arr[i]*=x}module.exports=multiply},{}],219:[function(require,module){"use strict";function mvariance(arr,W){if(!Array.isArray(arr))throw new TypeError("mvariance()::invalid input argument. Must provide an array.");if("number"!=typeof W||W!==W)throw new TypeError("mvariance()::invalid input argument. Window must be numeric.");if(W%1!==0||1>W)throw new TypeError("mvariance()::invalid input argument. Window must be a positive integer.");if(W>arr.length)throw new TypeError("mvariance()::invalid input argument. Window cannot exceed the array length.");var delta,x1,x2,d1,d2,i,j,len=arr.length,out=new Array(len-W+1),n=W-1,mu=0,M2=0;if(1===W){for(i=0;i<out.length;i++)out[i]=0;return out}for(i=0;W>i;i++)x1=arr[i],delta=x1-mu,mu+=delta/(i+1),M2+=delta*(x1-mu);for(out[0]=M2/n,j=W;len>j;j++)i=j-W,x1=arr[i],x2=arr[j],delta=x2-x1,d1=x1-mu,mu+=delta/W,d2=x2-mu,M2+=delta*(d1+d2),out[i+1]=M2/n;return out}module.exports=mvariance},{}],220:[function(require,module){!function(){"use strict";function nangmean(arr){if(!Array.isArray(arr))throw new TypeError("gmean()::invalid input argument. Must provide an array.");for(var val,len=arr.length,N=0,sum=0,i=0;len>i;i++)if(val=arr[i],"number"==typeof val&&val===val){if(0>=val)return 0/0;N+=1,sum+=Math.log(val)}return Math.exp(sum/N)}module.exports=nangmean}()},{}],221:[function(require,module){!function(){"use strict";function nanhmean(arr){if(!Array.isArray(arr))throw new TypeError("hmean()::invalid input argument. Must provide an array.");for(var val,len=arr.length,sum=0,N=0,i=0;len>i;i++)if(val=arr[i],"number"==typeof val&&val===val){if(0>=val)return 0/0;N+=1,sum+=1/val}return N/sum}module.exports=nanhmean}()},{}],222:[function(require,module){"use strict";function nanmax(arr){if(!Array.isArray(arr))throw new TypeError("nanmax()::invalid input argument. Must provide an array.");for(var val,len=arr.length,max=null,i=0;len>i;i++)val=arr[i],"number"==typeof val&&val===val&&(null===max||val>max)&&(max=val);return max}module.exports=nanmax},{}],223:[function(require,module){!function(){"use strict";function nanmean(arr){if(!Array.isArray(arr))throw new TypeError("mean()::invalid input argument. Must provide an array.");for(var val,len=arr.length,N=0,mu=0,diff=0,i=0;len>i;i++)val=arr[i],"number"==typeof val&&val===val&&(N+=1,diff=val-mu,mu+=diff/N);return mu}module.exports=nanmean}()},{}],224:[function(require,module){"use strict";function ascending(a,b){return a-b}function nanmedian(arr,options){var sorted,clbk,len,id,d,x;if(!isArray(arr))throw new TypeError("nanmedian()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(arguments.length>1){if(!isObject(options))throw new TypeError("nanmedian()::invalid input argument. Options must be an object. Value: `"+options+"`.");if(options.hasOwnProperty("sorted")&&(sorted=options.sorted,!isBoolean(sorted)))throw new TypeError("nanmedian()::invalid option. Sorted flag must be a boolean. Option: `"+sorted+"`.");if(options.hasOwnProperty("accessor")&&(clbk=options.accessor,"function"!=typeof clbk))throw new TypeError("nanmedian()::invalid option. Accessor must be a function. Option: `"+clbk+"`.")}d=[];for(var i=0;i<arr.length;i++)x=clbk?clbk(arr[i]):arr[i],isNumber(x)&&d.push(x);return(len=d.length)?(sorted||d.sort(ascending),id=Math.floor(len/2),len%2?d[id]:(d[id-1]+d[id])/2):null}var isArray=require("validate.io-array"),isObject=require("validate.io-object"),isBoolean=require("validate.io-boolean"),isNumber=require("validate.io-number");module.exports=nanmedian},{"validate.io-array":225,"validate.io-boolean":226,"validate.io-number":227,"validate.io-object":228}],225:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],226:[function(require,module,exports){arguments[4][181][0].apply(exports,arguments)},{dup:181}],227:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],228:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":225}],229:[function(require,module){"use strict";function nanmin(arr){if(!Array.isArray(arr))throw new TypeError("nanmin()::invalid input argument. Must provide an array.");for(var val,len=arr.length,min=null,i=0;len>i;i++)val=arr[i],"number"==typeof val&&val===val&&(null===min||min>val)&&(min=val);return min}module.exports=nanmin},{}],230:[function(require,module){"use strict";function nanprod(arr,clbk){if(!isArray(arr))throw new TypeError("nanprod()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(arguments.length>1&&"function"!=typeof clbk)throw new TypeError("nanprod()::invalid input argument. Accessor must be a function. Value: `"+clbk+"`.");var val,i,len=arr.length,flg=!1,p=1;if(!len)return null;if(clbk){for(i=0;len>i;i++)if(val=clbk(arr[i]),isNumber(val)){if(flg=!0,0===val)return 0;p*=val}}else for(i=0;len>i;i++)if(val=arr[i],isNumber(val)){if(flg=!0,0===val)return 0;p*=val}return flg?p:0/0}var isArray=require("validate.io-array"),isNumber=require("validate.io-number");module.exports=nanprod},{"validate.io-array":231,"validate.io-number":232}],231:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],232:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],233:[function(require,module){!function(){"use strict";function nanqmean(arr){if(!Array.isArray(arr))throw new TypeError("nanqmean()::invalid input argument. Must provide an array.");for(var r,val,abs,len=arr.length,N=0,t=0,s=1,i=0;len>i;i++)val=arr[i],"number"==typeof val&&val===val&&(N+=1,abs=val,0>abs&&(abs=-abs),abs>0&&(abs>t?(r=t/val,s=1+s*r*r,t=abs):(r=val/t,s+=r*r)));return t*Math.sqrt(s/N)}module.exports=nanqmean}()},{}],234:[function(require,module){"use strict";function ascending(a,b){return a-b}function nanquantiles(arr,num,opts){var sorted,clbk,qValues,id,val,len,d,x,i;if(!isArray(arr))throw new TypeError("nanquantiles()::invalid input argument. First argument must be an array. Value: `"+arr+"`.");if(!isNonNegativeInteger(num))throw new TypeError("nanquantiles()::invalid input argument. Number of quantiles must be a nonnegative integer. Value: `"+num+"`.");if(arguments.length>2){if(!isObject(opts))throw new TypeError("nanquantiles()::invalid input argument. Options must be an object. Value: `"+opts+"`.");if(opts.hasOwnProperty("sorted")&&(sorted=opts.sorted,!isBoolean(sorted)))throw new TypeError("nanquantiles()::invalid option. Sorted flag must be a boolean. Option: `"+sorted+"`.");if(opts.hasOwnProperty("accessor")&&(clbk=opts.accessor,"function"!=typeof clbk))throw new TypeError("nanquantiles()::invalid option. Accessor must be a function. Option: `"+clbk+"`.")}for(d=[],i=0;i<arr.length;i++)x=clbk?clbk(arr[i]):arr[i],isNumber(x)&&d.push(x);if(len=d.length,!len)return null;for(sorted||d.sort(ascending),qValues=new Array(num+1),qValues[0]=d[0],qValues[num]=d[len-1],i=1;num>i;i++)id=len*i/num-1,id%1===0?val=(d[id]+d[id+1])/2:(id=Math.ceil(id),val=d[id]),qValues[i]=val;return qValues}var isArray=require("validate.io-array"),isObject=require("validate.io-object"),isNonNegativeInteger=require("validate.io-nonnegative-integer"),isNumber=require("validate.io-number"),isBoolean=require("validate.io-boolean");module.exports=nanquantiles},{"validate.io-array":235,"validate.io-boolean":236,"validate.io-nonnegative-integer":237,"validate.io-number":239,"validate.io-object":240}],235:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],236:[function(require,module,exports){arguments[4][181][0].apply(exports,arguments)},{dup:181}],237:[function(require,module,exports){arguments[4][62][0].apply(exports,arguments)},{dup:62,"validate.io-integer":238}],238:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":239}],239:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],240:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":235}],241:[function(require,module){"use strict";function nanrange(arr,clbk){if(!isArray(arr))throw new TypeError("range()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(arguments.length>1&&"function"!=typeof clbk)throw new TypeError("range()::invalid input argument. Accessor must be a function. Value: `"+clbk+"`.");for(var x,len=arr.length,min=null,max=min,flg=!0,i=0;len>i;i++)x=clbk?clbk(arr[i]):arr[i],isNumber(x)&&(flg?(min=x,max=x,flg=!1):min>x?min=x:x>max&&(max=x));return flg?null:[min,max]}var isArray=require("validate.io-array"),isNumber=require("validate.io-number");module.exports=nanrange},{"validate.io-array":242,"validate.io-number":243}],242:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],243:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],244:[function(require,module){!function(){"use strict";function nanstdev(arr){if(!Array.isArray(arr))throw new TypeError("nanstdev()::invalid input argument. Must provide an array.");for(var x,len=arr.length,N=0,mean=0,M2=0,delta=0,i=0;len>i;i++)x=arr[i],"number"==typeof x&&x===x&&(N+=1,delta=x-mean,mean+=delta/N,M2+=delta*(x-mean));return 2>N?0:Math.sqrt(M2/(N-1))}module.exports=nanstdev}()},{}],245:[function(require,module){"use strict";function nansum(arr,clbk){if(!isArray(arr))throw new TypeError("nansum()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(arguments.length>1&&"function"!=typeof clbk)throw new TypeError("nansum()::invalid input argument. Accessor must be a function. Value: `"+clbk+"`.");var val,i,len=arr.length,s=0;if(!len)return null;if(clbk)for(i=0;len>i;i++)val=clbk(arr[i]),isNumber(val)&&(s+=val);else for(i=0;len>i;i++)val=arr[i],isNumber(val)&&(s+=val);return s}var isArray=require("validate.io-array"),isNumber=require("validate.io-number");module.exports=nansum},{"validate.io-array":246,"validate.io-number":247}],246:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],247:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],248:[function(require,module){!function(){"use strict";function nanvariance(arr){if(!Array.isArray(arr))throw new TypeError("nanvariance()::invalid input argument. Must provide an array.");for(var x,len=arr.length,N=0,mean=0,M2=0,delta=0,i=0;len>i;i++)x=arr[i],"number"==typeof x&&x===x&&(N+=1,delta=x-mean,mean+=delta/N,M2+=delta*(x-mean));return 2>N?0:M2/(N-1)}module.exports=nanvariance}()},{}],249:[function(require,module){"use strict";function neq(arr,x,opts){var out,len,i,isArray=Array.isArray(x),strict=!0,arrCompare=!1;if(!Array.isArray(arr))throw new TypeError("neq()::invalid input argument. Must provide an array.");if(arguments.length>2){if(!isObject(opts))throw new TypeError("neq()::invalid input argument. Options must be an object.");if(opts.hasOwnProperty("strict")&&(strict=opts.strict,"boolean"!=typeof strict))throw new TypeError("neq()::invalid input argument. Strict option must be a boolean.");if(opts.hasOwnProperty("array")&&(arrCompare=opts.array,"boolean"!=typeof arrCompare))throw new TypeError("neq()::invalid input argument. Array option must be a boolean.")}if(len=arr.length,out=new Array(len),strict){if(!isArray||x.length!==len||arrCompare){for(i=0;len>i;i++)out[i]=arr[i]!==x?1:0;return out}for(i=0;len>i;i++)out[i]=arr[i]!==x[i]?1:0;return out}if(!isArray||x.length!==len||arrCompare){for(i=0;len>i;i++)out[i]=arr[i]!=x?1:0;return out}for(i=0;len>i;i++)out[i]=arr[i]!=x[i]?1:0;return out}var isObject=require("validate.io-object");module.exports=neq},{"validate.io-object":250}],250:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":251}],251:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],252:[function(require,module){"use strict";function pcorr(){var args,nArgs,len,deltas,delta,means,stdevs,C,cov,corr,arr,N,r,A,B,sum,val,sigma,i,j,n;if(args=Array.prototype.slice.call(arguments),nArgs=args.length,!nArgs)throw new Error("pcorr()::insufficient input arguments. Must provide array arguments.");for(i=0;nArgs>i;i++)if(!Array.isArray(args[i]))throw new TypeError("pcorr()::invalid input argument. Must provide array arguments.");for(Array.isArray(args[0][0])&&(args=args[0]),nArgs=args.length,len=args[0].length,i=1;nArgs>i;i++)if(args[i].length!==len)throw new Error("pcorr()::invalid input argument. All arrays must have equal length.");for(deltas=new Array(nArgs),means=new Array(nArgs),stdevs=new Array(nArgs),C=new Array(nArgs),cov=new Array(nArgs),corr=new Array(nArgs),i=0;nArgs>i;i++){for(means[i]=args[i][0],arr=new Array(nArgs),j=0;nArgs>j;j++)arr[j]=0;C[i]=arr,cov[i]=arr.slice(),corr[i]=arr.slice()}if(2>len)return corr;for(n=1;len>n;n++){for(N=n+1,r=n/N,i=0;nArgs>i;i++)deltas[i]=args[i][n]-means[i];for(i=0;nArgs>i;i++)for(arr=C[i],delta=deltas[i],j=i;nArgs>j;j++)A=arr[j],B=r*delta*deltas[j],sum=A+B,i!==j&&(C[j][i]=sum),arr[j]=sum;for(i=0;nArgs>i;i++)means[i]+=deltas[i]/N}for(n=N-1,i=0;nArgs>i;i++)for(arr=C[i],j=i;nArgs>j;j++)val=arr[j]/n,cov[i][j]=val,i!==j&&(cov[j][i]=val);for(i=0;nArgs>i;i++)stdevs[i]=Math.sqrt(cov[i][i]);for(i=0;nArgs>i;i++)corr[i][i]=1;for(i=0;nArgs>i;i++)for(arr=cov[i],sigma=stdevs[i],j=i+1;nArgs>j;j++)val=arr[j]/(sigma*stdevs[j]),val>1?val=1:-1>val&&(val=-1),corr[i][j]=val,corr[j][i]=val;return corr}module.exports=pcorr},{}],253:[function(require,module){"use strict";function polyval(c,x){for(var len=c.length,p=0,i=0;len>i;i++)p=p*x+c[i];return p}function evaluate(c,x,opts){var clbk,len,arr,v,i,copy=!0;if(!isNumberArray(c))throw new TypeError("polynomial()::invalid input argument. Coefficients must be provided as an array of number primitives. Value: `"+c+"`.");if(isNumber(x))return polyval(c,x);if(!isArray(x))throw new TypeError("polynomial()::invalid input argument. Second argument must be either a single number primitive or an array of values. Value: `"+x+"`.");if(arguments.length>2){if(!isObject(opts))throw new TypeError("polynomial()::invalid input argument. Options argument must be an object. Value: `"+opts+"`.");if(opts.hasOwnProperty("copy")&&(copy=opts.copy,!isBoolean(copy)))throw new TypeError("polynomial()::invalid option. Copy option must be a boolean primitive. Option: `"+copy+"`.");if(opts.hasOwnProperty("accessor")&&(clbk=opts.accessor,!isFunction(clbk)))throw new TypeError("polynomial()::invalid option. Accessor must be a function. Option: `"+clbk+"`.")}if(len=x.length,arr=copy?new Array(len):x,clbk)for(i=0;len>i;i++){if(v=clbk(x[i],i),!isNumber(v))throw new TypeError("polynomial()::invalid input argument. Accessed array values must be number primitives. Value: `"+v+"`.");arr[i]=polyval(c,v)}else for(i=0;len>i;i++){if(v=x[i],!isNumber(v))throw new TypeError("polynomial()::invalid input argument. Array values must be number primitives. Value: `"+v+"`.");arr[i]=polyval(c,v)}return arr}var isNumber=require("validate.io-number-primitive"),isArray=require("validate.io-array"),isNumberArray=require("validate.io-number-primitive-array"),isObject=require("validate.io-object"),isBoolean=require("validate.io-boolean-primitive"),isFunction=require("validate.io-function");module.exports=evaluate},{"validate.io-array":254,"validate.io-boolean-primitive":255,"validate.io-function":256,"validate.io-number-primitive":258,"validate.io-number-primitive-array":257,"validate.io-object":259}],254:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],255:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{dup:25}],256:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],257:[function(require,module){"use strict";function isNumberArray(value){var len,v;if(!isArray(value))return!1;if(len=value.length,!len)return!1;for(var i=0;len>i;i++)if(v=value[i],"number"!=typeof v||v!==v)return!1;return!0}var isArray=require("validate.io-array");module.exports=isNumberArray},{"validate.io-array":254}],258:[function(require,module,exports){arguments[4][80][0].apply(exports,arguments)},{dup:80}],259:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":254}],260:[function(require,module){"use strict";function prod(arr,clbk){if(!isArray(arr))throw new TypeError("prod()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(arguments.length>1&&"function"!=typeof clbk)throw new TypeError("prod()::invalid input argument. Accessor must be a function. Value: `"+clbk+"`.");var val,i,len=arr.length,p=1;if(!len)return null;if(clbk)for(i=0;len>i;i++){if(val=clbk(arr[i]),0===val)return 0;p*=val}else for(i=0;len>i;i++){if(val=arr[i],0===val)return 0;p*=val}return p}var isArray=require("validate.io-array");module.exports=prod},{"validate.io-array":261}],261:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],262:[function(require,module){!function(){"use strict";function qmean(arr){if(!Array.isArray(arr))throw new TypeError("qmean()::invalid input argument. Must provide an array.");for(var r,val,abs,len=arr.length,t=0,s=1,i=0;len>i;i++)val=arr[i],abs=val,0>abs&&(abs=-abs),abs>0&&(abs>t?(r=t/val,s=1+s*r*r,t=abs):(r=val/t,s+=r*r));return t*Math.sqrt(s/len)}module.exports=qmean}()},{}],263:[function(require,module){"use strict";function ascending(a,b){return a-b}function quantile(arr,p,opts){if(!Array.isArray(arr))throw new TypeError("quantile()::invalid input argument. First argument must be an array.");if("number"!=typeof p||p!==p)throw new TypeError("quantile()::invalid input argument. Quantile probability must be numeric.");if(0>p||p>1)throw new TypeError("quantile()::invalid input argument. Quantile probability must be on the interval [0,1].");if(arguments.length>2){if(!isObject(opts))throw new TypeError("quantile()::invalid input argument. Options must be an object.");if(opts.hasOwnProperty("sorted")&&"boolean"!=typeof opts.sorted)throw new TypeError("quantile()::invalid input argument. Sorted flag must be a boolean.");if(opts.hasOwnProperty("method")&&"string"!=typeof opts.method)throw new TypeError("quantile()::invalid input argument. Method must be a string.")}else opts={};var id,len=arr.length;return opts.sorted||(arr=arr.slice(),arr.sort(ascending)),0===p?arr[0]:1===p?arr[len-1]:(id=len*p-1,id===Math.floor(id)?(arr[id]+arr[id+1])/2:(id=Math.ceil(id),arr[id]))}var isObject=require("validate.io-object");module.exports=quantile},{"validate.io-object":264}],264:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":265}],265:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],266:[function(require,module){"use strict";function ascending(a,b){return a-b}function quantiles(arr,num,opts){if(!Array.isArray(arr))throw new TypeError("quantiles()::invalid input argument. First argument must be an array.");if(!isInteger(num)||0>=num)throw new TypeError("quantiles()::invalid input argument. Second argument must be a positive integer.");if(arguments.length>2){if(!isObject(opts))throw new TypeError("quantiles()::invalid input argument. Options should be an object.");if(opts.hasOwnProperty("sorted")&&"boolean"!=typeof opts.sorted)throw new TypeError("quantiles()::invalid input argument. Sorted flag must be a boolean.");if(opts.hasOwnProperty("method")&&"string"!=typeof opts.method)throw new TypeError("quantiles()::invalid input argument. Method must be a string.")}else opts={};var id,val,len=arr.length,qValues=new Array(num+1);opts.sorted||(arr=arr.slice(),arr.sort(ascending)),qValues[0]=arr[0],qValues[num]=arr[len-1];for(var i=1;num>i;i++)id=len*i/num-1,id===Math.floor(id)?val=(arr[id]+arr[id+1])/2:(id=Math.ceil(id),val=arr[id]),qValues[i]=val;return qValues}var isObject=require("validate.io-object"),isInteger=require("validate.io-integer");module.exports=quantiles},{"validate.io-integer":267,"validate.io-object":269}],267:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":268}],268:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],269:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":270}],270:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],271:[function(require,module){"use strict";function rad2deg(x){var len,isArray=Array.isArray(x);if(!isArray&&("number"!=typeof x||x!==x))throw new TypeError("rad2deg()::invalid input argument. Must provide either a single numeric value or a numeric array.");if(!isArray)return 180*x/Math.PI;if(len=x.length,!len)return null;for(var i=0;len>i;i++)x[i]*=180/Math.PI;return x}module.exports=rad2deg},{}],272:[function(require,module){"use strict";function range(arr,clbk){if(!isArray(arr))throw new TypeError("range()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(arguments.length>1&&!isFunction(clbk))throw new TypeError("range()::invalid input argument. Accessor must be a function. Value: `"+clbk+"`.");var min,max,x,i,len=arr.length;if(0===len)return null;if(clbk)for(min=clbk(arr[0]),max=min,i=1;len>i;i++)x=clbk(arr[i]),min>x?min=x:x>max&&(max=x);else for(min=arr[0],max=min,i=1;len>i;i++)x=arr[i],min>x?min=x:x>max&&(max=x);return[min,max]}var isArray=require("validate.io-array"),isFunction=require("validate.io-function");module.exports=range},{"validate.io-array":273,"validate.io-function":274}],273:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],274:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],275:[function(require,module){"use strict";function reverse(arr,opts){var copy,half,len,tmp,out,N,i,j;if(!isArray(arr))throw new TypeError("reverse()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(arguments.length>1){if(!isObject(opts))throw new TypeError("reverse()::invalid input argument. Options argument must be an object. Value: `"+opts+"`.");if(opts.hasOwnProperty("copy")&&(copy=opts.copy,!isBoolean(copy)))throw new TypeError("reverse()::invalid option. Copy option must be a boolean primitive. Option: `"+copy+"`.")}if(len=arr.length,N=len-1,copy){for(out=new Array(len),i=0;len>i;i++)out[i]=arr[N-i];return out}for(half=Math.floor(len/2),i=0;half>i;i++)tmp=arr[i],j=N-i,arr[i]=arr[j],arr[j]=tmp;return arr}var isArray=require("validate.io-array"),isObject=require("validate.io-object"),isBoolean=require("validate.io-boolean-primitive");module.exports=reverse},{"validate.io-array":276,"validate.io-boolean-primitive":277,"validate.io-object":278}],276:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],277:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{dup:25}],278:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":276}],279:[function(require,module){!function(){"use strict";function shuffle(arr){if(!Array.isArray(arr))throw new TypeError("shuffle()::invalid input argument. Must provide an array.");for(var j,tmp,N=arr.length,i=N-1;i>0;i--)j=Math.floor(Math.random()*(i+1)),tmp=arr[i],arr[i]=arr[j],arr[j]=tmp}module.exports=shuffle}()},{}],280:[function(require,module){"use strict";function signum(x){return x!==x?0/0:x?0>x?-1:1:x}var isArray=require("validate.io-array"),isObject=require("validate.io-object"),isBoolean=require("validate.io-boolean-primitive"),isFunction=require("validate.io-function");module.exports=function(x,opts){var clbk,len,arr,v,i,copy=!0;if("number"==typeof x)return signum(x);if(!isArray(x))throw new TypeError("signum()::invalid input argument. Must provide either a single number primitive or an array of number primitives. Value: `"+x+"`.");if(arguments.length>1){if(!isObject(opts))throw new TypeError("signum()::invalid input argument. Options argument must be an object. Value: `"+opts+"`.");if(opts.hasOwnProperty("accessor")&&(clbk=opts.accessor,!isFunction(clbk)))throw new TypeError("signum()::invalid option. Accessor must be a function. Option: `"+clbk+"`.");if(opts.hasOwnProperty("copy")&&(copy=opts.copy,!isBoolean(copy)))throw new TypeError("signum()::invalid option. Copy option must be a boolean primitive. Option: `"+copy+"`.")}if(len=x.length,arr=copy?new Array(len):x,clbk)for(i=0;len>i;i++){if(v=clbk(x[i],i),"number"!=typeof v)throw new TypeError("signum()::invalid value. Accessed array values must be number primitives. Value: `"+v+"`.");arr[i]=signum(v)}else for(i=0;len>i;i++){if(v=x[i],"number"!=typeof v)throw new TypeError("signum()::invalid input argument. Must provide an array of number primitives. Value: `"+v+"`.");arr[i]=signum(v)}return arr}},{"validate.io-array":281,"validate.io-boolean-primitive":282,"validate.io-function":283,"validate.io-object":284}],281:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],282:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments);

},{dup:25}],283:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],284:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":281}],285:[function(require,module){!function(){"use strict";function skewness(arr){if(!Array.isArray(arr))throw new TypeError("skewness()::invalid input argument. Must provide an array.");for(var g,len=arr.length,delta=0,delta_n=0,term1=0,N=0,mean=0,M2=0,M3=0,i=0;len>i;i++)N+=1,delta=arr[i]-mean,delta_n=delta/N,term1=delta*delta_n*(N-1),M3+=term1*delta_n*(N-2)-3*delta_n*M2,M2+=term1,mean+=delta_n;return g=Math.sqrt(N)*M3/Math.pow(M2,1.5),Math.sqrt(N*N-1)*g/(N-2)}module.exports=skewness}()},{}],286:[function(require,module){"use strict";function sqrt(arr){if(!Array.isArray(arr))throw new TypeError("sqrt()::invalid input argument. Must provide an array.");for(var len=arr.length,i=0;len>i;i++)arr[i]=Math.sqrt(arr[i])}module.exports=sqrt},{}],287:[function(require,module){!function(){"use strict";function stdev(arr){if(!Array.isArray(arr))throw new TypeError("stdev()::invalid input argument. Must provide an array.");var len=arr.length,N=0,mean=0,M2=0,delta=0;if(2>len)return 0;for(var i=0;len>i;i++)N+=1,delta=arr[i]-mean,mean+=delta/N,M2+=delta*(arr[i]-mean);return Math.sqrt(M2/(N-1))}module.exports=stdev}()},{}],288:[function(require,module){"use strict";function subtract(arr,x){var len,i,isArray=Array.isArray(x);if(!Array.isArray(arr))throw new TypeError("subtract()::invalid input argument. Must provide an array.");if(len=arr.length,!isArray&&("number"!=typeof x||x!==x))throw new TypeError("subtract()::invalid input argument. Second argument must be either an array or a scalar.");if(isArray){if(len!==x.length)throw new Error("subtract()::invalid input argument. Arrays must be of equal length.");for(i=0;len>i;i++)arr[i]-=x[i]}else for(i=0;len>i;i++)arr[i]-=x}module.exports=subtract},{}],289:[function(require,module){"use strict";function sum(arr,clbk){if(!isArray(arr))throw new TypeError("sum()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(arguments.length>1&&"function"!=typeof clbk)throw new TypeError("sum()::invalid input argument. Accessor must be a function. Value: `"+clbk+"`.");var i,len=arr.length,s=0;if(!len)return null;if(clbk)for(i=0;len>i;i++)s+=clbk(arr[i]);else for(i=0;len>i;i++)s+=arr[i];return s}var isArray=require("validate.io-array");module.exports=sum},{"validate.io-array":290}],290:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],291:[function(require,module){"use strict";function ascending(a,b){return a-b}function trimean(arr,opts){if(!Array.isArray(arr))throw new TypeError("trimean()::invalid input argument. Must provide an array.");if(arguments.length>1){if(!isObject(opts))throw new TypeError("trimean()::invalid input argument. Options should be an object.")}else opts={sorted:!1};opts.sorted||(arr=arr.slice(),arr.sort(ascending),opts.sorted=!0);var q1=quantile(arr,.25,opts),q2=median(arr,!0),q3=quantile(arr,.75,opts);return(q1+2*q2+q3)/4}var isObject=require("validate.io-object"),median=require("compute-median"),quantile=require("compute-quantile");module.exports=trimean},{"compute-median":292,"compute-quantile":263,"validate.io-object":293}],292:[function(require,module){"use strict";function ascending(a,b){return a-b}function median(arr,sorted){if(!Array.isArray(arr))throw new TypeError("median()::invalid input argument. Must provide an array.");if(arguments.length>1&&"boolean"!=typeof sorted)throw new TypeError("median()::invalid input argument. Second argument must be a boolean.");var id,len=arr.length;return sorted||(arr=arr.slice(),arr.sort(ascending)),id=Math.floor(len/2),len%2?arr[id]:(arr[id-1]+arr[id])/2}module.exports=median},{}],293:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":294}],294:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],295:[function(require,module){"use strict";function ascending(a,b){return a-b}function truncmean(arr,discard,options){var sorted,clbk,interp,delta,diff,len,mu,lo,hi,N,tmp,w1,w2,d,i;if(!isArray(arr))throw new TypeError("truncmean()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(len=arr.length,!isNumber(discard))throw new TypeError("truncmean()::invalid input argument. Discard must be either a number on the interval [0,0.5] or a nonnegative integer. Value: `"+discard+"`.");if(isNonNegativeInteger(discard)){if(discard>len/2)throw new RangeError("truncmean()::invalid input argument. Number of discard values cannot exceed half the array length. Value: `"+discard+"`.")}else if(0>discard||discard>.5)throw new RangeError("truncmean()::invalid input argument. Discard must be either a number on the interval [0,0.5] or a nonnegative integer. Value: `"+discard+"`.");if(arguments.length>2){if(!isObject(options))throw new TypeError("truncmean()::invalid input argument. Options must be an object. Value: `"+options+"`.");if(options.hasOwnProperty("sorted")&&(sorted=options.sorted,!isBoolean(sorted)))throw new TypeError("truncmean()::invalid option. Sorted option must be a boolean. Value: `"+sorted+"`.");if(options.hasOwnProperty("accessor")&&(clbk=options.accessor,!isFunction(clbk)))throw new TypeError("truncmean()::invalid option. Accessor must be a function. Value: `"+clbk+"`.");if(options.hasOwnProperty("interpolate")&&(interp=options.interpolate,!isBoolean(interp)))throw new TypeError("truncmean()::invalid option. Interpolate option must be a boolean. Value: `"+interp+"`.")}if(!len)return null;if(!clbk&&sorted)d=arr;else if(clbk)for(d=[],i=0;len>i;i++)d.push(clbk(arr[i]));else for(d=[],i=0;len>i;i++)d.push(arr[i]);if(sorted||d.sort(ascending),discard>=1||0===discard||.5===discard||!interp){for(1>discard&&0!==discard&&(discard=Math.floor(len*discard)),lo=discard,hi=len-discard-1,lo>hi&&(tmp=lo,lo=hi,hi=tmp),mu=0,N=0,i=lo;hi>=i;i++)N+=1,delta=d[i]-mu,mu+=delta/N;return mu}for(N=Math.floor(len*discard),w1=N/len,w2=(N+1)/len,lo=N,hi=len-N-1,mu=0,N=0,i=lo;hi>=i;i++)N+=1,delta=d[i]-mu,mu+=delta/N;return 2*w2>=1?mu:(tmp=mu,diff=w2-w1,i=w1,w1=(w2-discard)/diff,w2=(discard-i)/diff,N-=1,delta=d[lo]-mu,mu-=delta/N,N-=1,delta=d[hi]-mu,mu-=delta/N,w1*tmp+w2*mu)}var isArray=require("validate.io-array"),isNumber=require("validate.io-number-primitive"),isBoolean=require("validate.io-boolean-primitive"),isObject=require("validate.io-object"),isFunction=require("validate.io-function"),isNonNegativeInteger=require("validate.io-nonnegative-integer");module.exports=truncmean},{"validate.io-array":296,"validate.io-boolean-primitive":297,"validate.io-function":298,"validate.io-nonnegative-integer":299,"validate.io-number-primitive":302,"validate.io-object":303}],296:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],297:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{dup:25}],298:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],299:[function(require,module,exports){arguments[4][62][0].apply(exports,arguments)},{dup:62,"validate.io-integer":300}],300:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":301}],301:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],302:[function(require,module,exports){arguments[4][80][0].apply(exports,arguments)},{dup:80}],303:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":296}],304:[function(require,module){"use strict";function unique(arr){for(var val,len=arr.length,hash={},vals=[],i=0;len>i;i++)val=arr[i],hash.hasOwnProperty(val)||(hash[val]=!0,vals.push(val));return vals}function tversky(a,b,options){var aType,bType,opts,anb,len,aCompl,bCompl,hash,min,max,i,symmetric=!1,alpha=1,beta=1;if(aType=isString(a),!isArray(a)&&!aType)throw new TypeError("tversky()::invalid input argument. Sequence must be either an array or a string. Value: `"+a+"`.");if(bType=isString(b),!isArray(b)&&!bType)throw new TypeError("tversky()::invalid input argument. Sequence must be either an array or a string. Value: `"+b+"`.");if(aType!==bType)throw new Error("tversky()::invalid input arguments. Sequences must be the same type; i.e., both strings or both arrays.");if(arguments.length>2){if(opts=options,!isObject(opts))throw new TypeError("tversky()::invalid input argument. Options must be an object. Value: `"+opts+"`.");if(opts.hasOwnProperty("alpha")&&(alpha=opts.alpha,!isNonNegative(alpha)))throw new TypeError("tversky()::invalid option. Alpha must be a nonnegative number. Value: `"+alpha+"`.");if(opts.hasOwnProperty("beta")&&(beta=opts.beta,!isNonNegative(beta)))throw new TypeError("tversky()::invalid option. Beta must be a nonnegative number. Value: `"+beta+"`.");if(opts.hasOwnProperty("symmetric")&&(symmetric=opts.symmetric,!isBoolean(symmetric)))throw new TypeError("tversky()::invalid option. Symmetric flag must be a boolean. Value: `"+symmetric+"`.")}for(aType&&(a=a.split(""),b=b.split("")),a=unique(a),b=unique(b),anb=intersect(a,b),len=anb.length,hash={},i=0;len>i;i++)hash[anb[i]]=!0;for(aCompl=0,i=0;i<a.length;i++)hash.hasOwnProperty(a[i])||aCompl++;for(bCompl=0,i=0;i<b.length;i++)hash.hasOwnProperty(b[i])||bCompl++;return symmetric?(aCompl>bCompl?(min=bCompl,max=aCompl):(min=aCompl,max=bCompl),len/(len+beta*(alpha*min+max*(1-alpha)))):len/(len+alpha*aCompl+beta*bCompl)}var intersect=require("intersect"),isArray=require("validate.io-array"),isString=require("validate.io-string"),isBoolean=require("validate.io-boolean"),isObject=require("validate.io-object"),isNonNegative=require("validate.io-nonnegative");module.exports=tversky},{intersect:305,"validate.io-array":306,"validate.io-boolean":307,"validate.io-nonnegative":308,"validate.io-object":310,"validate.io-string":311}],305:[function(require,module){function intersect(a,b){for(var res=[],i=0;i<a.length;i++)indexOf(b,a[i])>-1&&res.push(a[i]);return res}function indexOf(arr,el){for(var i=0;i<arr.length;i++)if(arr[i]===el)return i;return-1}module.exports=intersect,intersect.big=function(a,b){for(var ret=[],temp={},i=0;i<b.length;i++)temp[b[i]]=!0;for(var i=0;i<a.length;i++)temp[a[i]]&&ret.push(a[i]);return ret}},{}],306:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],307:[function(require,module,exports){arguments[4][181][0].apply(exports,arguments)},{dup:181}],308:[function(require,module){"use strict";function isNonNegative(value){return isNumber(value)&&value>=0}var isNumber=require("validate.io-number");module.exports=isNonNegative},{"validate.io-number":309}],309:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],310:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":306}],311:[function(require,module,exports){arguments[4][96][0].apply(exports,arguments)},{dup:96}],312:[function(require,module){"use strict";function ascending(a,b){return a-b}function umidmean(arr,sorted){if(!Array.isArray(arr))throw new TypeError("umidmean()::invalid input argument. Must provide an array.");if(arguments.length>1&&"boolean"!=typeof sorted)throw new TypeError("umidmean()::invalid input argument. Second argument must be a boolean.");if(arr.length<6)throw new Error("umidmean()::invalid input argument. Input array must have 6 or more elements.");sorted||(arr=arr.slice(),arr.sort(ascending));var delta,low,high,len=arr.length,mean=0,N=0;len%8===0?(low=.625*len,high=.875*len-1):(low=Math.ceil(.625*len),high=Math.floor(.875*len)-1);for(var i=low;high>=i;i++)N+=1,delta=arr[i]-mean,mean+=delta/N;return mean}module.exports=umidmean},{}],313:[function(require,module){"use strict";function ascending(a,b){return a-b}function unique(arr,sorted){if(!Array.isArray(arr))throw new TypeError("unique()::invalid input argument. First argument must be an array.");if(arguments.length>1&&"boolean"!=typeof sorted)throw new TypeError("unique()::invalid input argument. Second argument must be an array.");var i,j,val,len=arr.length;if(len){for(sorted||arr.sort(ascending),i=1,j=0;len>i;i++)val=arr[i],arr[j]!==val&&(j++,arr[j]=val);arr.length=j+1}}module.exports=unique},{}],314:[function(require,module){"use strict";function unzip(arr,idx){var len,out,tmp,numVals,i,j,k;if(!isArrayArray(arr))throw new TypeError("unzip()::invalid input argument. Must provide a zipped array (an array of arrays). Value: `"+arr+"`.");if(numVals=arr[0].length,arguments.length>1){if(!isArray(idx))throw new TypeError("unzip()::invalid input argument. Indices must be specified as an array.");for(i=0;i<idx.length;i++){if(k=idx[i],!isNonNegativeInteger(k))throw new TypeError("unzip()::invalid input argument. All indices must be nonnegative integers. Value: `"+k+"`.");if(k>numVals)throw new RangeError("unzip()::invalid input argument. Must provide valid indices; i.e., an index must be on the interval [0,"+numVals+"]. Value: `"+k+"`.")}numVals=idx.length}else for(idx=new Array(numVals),i=0;numVals>i;i++)idx[i]=i;for(out=new Array(numVals),len=arr.length,j=0;numVals>j;j++){for(tmp=new Array(len),k=idx[j],i=0;len>i;i++)tmp[i]=arr[i][k];out[j]=tmp}return out}var isArray=require("validate.io-array"),isNonNegativeInteger=require("validate.io-nonnegative-integer"),isArrayArray=require("validate.io-array-array");module.exports=unzip},{"validate.io-array":316,"validate.io-array-array":315,"validate.io-nonnegative-integer":317}],315:[function(require,module){"use strict";function isArrayArray(value){var len;if(!isArray(value))return!1;if(len=value.length,!len)return!1;for(var i=0;len>i;i++)if(!isArray(value[i]))return!1;return!0}var isArray=require("validate.io-array");module.exports=isArrayArray},{"validate.io-array":316}],316:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],317:[function(require,module,exports){arguments[4][62][0].apply(exports,arguments)},{dup:62,"validate.io-integer":318}],318:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":319}],319:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],320:[function(require,module){"use strict";function variance(arr,opts){var clbk,bias=!1;if(!isArray(arr))throw new TypeError("variance()::invalid input argument. Must provide an array. Value: `"+arr+"`.");if(arguments.length>1){if(!isObject(opts))throw new TypeError("variance()::invalid input argument. Options must be an object. Value: `"+opts+"`.");if(opts.hasOwnProperty("bias")&&(bias=opts.bias,!isBoolean(bias)))throw new TypeError("variance()::invalid option. Bias option must be a boolean primitive. Value: `"+bias+"`.");if(opts.hasOwnProperty("accessor")&&(clbk=opts.accessor,!isFunction(clbk)))throw new TypeError("variance()::invalid option. Accessor must be a function. Value: `"+clbk+"`.")}var x,i,len=arr.length,delta=0,mean=0,M2=0;if(!len)return null;if(2>len)return 0;if(clbk)for(i=0;len>i;i++)x=clbk(arr[i]),delta=x-mean,mean+=delta/(i+1),M2+=delta*(x-mean);else for(i=0;len>i;i++)x=arr[i],delta=x-mean,mean+=delta/(i+1),M2+=delta*(x-mean);return bias?M2/i:M2/(i-1)}var isArray=require("validate.io-array"),isBoolean=require("validate.io-boolean-primitive"),isObject=require("validate.io-object"),isFunction=require("validate.io-function");module.exports=variance},{"validate.io-array":321,"validate.io-boolean-primitive":322,"validate.io-function":323,"validate.io-object":324}],321:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],322:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{dup:25}],323:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],324:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":321}],325:[function(require,module){!function(){"use strict";function wmean(arr,weights){if(!Array.isArray(arr)||!Array.isArray(weights))throw new TypeError("wmean()::invalid input argument. Must provide arrays.");if(arr.length!==weights.length)throw new Error("wmean()::invalid input arguments. Value array and weights array must be the same length.");for(var w,len=arr.length,sum=0,mu=0,i=0;len>i;i++)sum+=weights[i];for(var j=0;len>j;j++)w=weights[j]/sum,mu+=arr[j]*w;return mu}module.exports=wmean}()},{}],326:[function(require,module){"use strict";function zip(){var arg,flg,len,out,arr,val,i,j,args=Array.prototype.slice.call(arguments),numArgs=args.length,opts={},fill=null;for(i=0;numArgs-1>i;i++)if(!isArray(args[i]))throw new TypeError("zip()::invalid input argument. Must provide array arguments. Value: `"+args[i]+"`.");if(arg=args[numArgs-1],flg=isObject(arg),!flg&&!isArray(arg))throw new TypeError("zip()::invalid input argument. Last argument must be either an array or an options object. Value: `"+arg+"`.");if(flg&&(opts=args.pop()),numArgs=args.length,0===numArgs)throw new Error("zip()::insufficient input arguments. Must provide at least one array.");if(opts.hasOwnProperty("trunc")){if(!isBoolean(opts.trunc))throw new TypeError("zip()::invalid option. `trunc` option must be a boolean.  Value: `"+opts.trunc+"`.")}else opts.trunc=!0;if(opts.hasOwnProperty("fill")&&(fill=opts.fill),opts.hasOwnProperty("arrays")){if(!isBoolean(opts.arrays))throw new TypeError("zip()::invalid option. `arrays` option must be a boolean. Value: `"+opts.arrays+"`.")}else opts.arrays=!1;if(1===numArgs&&opts.arrays&&(args=args[0],numArgs=args.length),len=args[0].length,opts.trunc)for(i=0;numArgs>i;i++)val=args[i].length,len>val&&(len=val);else for(i=0;numArgs>i;i++)val=args[i].length,val>len&&(len=val);for(out=new Array(len),j=0;len>j;j++){for(arr=new Array(numArgs),i=0;numArgs>i;i++)arg=args[i],arr[i]=arg.length<=j?fill:arg[j];out[j]=arr}return out}var isObject=require("validate.io-object"),isArray=require("validate.io-array"),isBoolean=require("validate.io-boolean-primitive");module.exports=zip},{"validate.io-array":327,"validate.io-boolean-primitive":328,"validate.io-object":329}],327:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],328:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{dup:25}],329:[function(require,module,exports){arguments[4][21][0].apply(exports,arguments)},{dup:21,"validate.io-array":327}],330:[function(require,module){"use strict";var BTYPES={int8:Int8Array,uint8:Uint8Array,uint8_clamped:Uint8ClampedArray,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,float32:Float32Array,float64:Float64Array};module.exports=BTYPES},{}],331:[function(require,module){"use strict";function Matrix(data,dtype,shape,offset,strides){return this instanceof Matrix?(Object.defineProperty(this,"dtype",{value:dtype,configurable:!1,enumerable:!0,writable:!1}),Object.defineProperty(this,"shape",{value:shape,configurable:!1,enumerable:!0,writable:!1}),Object.defineProperty(this,"strides",{value:strides,configurable:!1,enumerable:!0,writable:!1}),Object.defineProperty(this,"offset",{value:offset,configurable:!1,enumerable:!0,writable:!0}),Object.defineProperty(this,"ndims",{value:shape.length,configurable:!1,enumerable:!0,writable:!1}),Object.defineProperty(this,"length",{value:data.length,configurable:!1,enumerable:!0,writable:!1}),Object.defineProperty(this,"nbytes",{value:data.byteLength,configurable:!1,enumerable:!0,writable:!1}),Object.defineProperty(this,"data",{value:data,configurable:!1,enumerable:!0,writable:!1}),this):new Matrix(data,dtype,shape,offset,strides)}Matrix.prototype.set=require("./set.js"),Matrix.prototype.iset=require("./iset.js"),Matrix.prototype.mset=require("./mset.js"),Matrix.prototype.sset=require("./sset.js"),Matrix.prototype.get=require("./get.js"),Matrix.prototype.iget=require("./iget.js"),Matrix.prototype.mget=require("./mget.js"),Matrix.prototype.sget=require("./sget.js"),Matrix.prototype.toString=require("./toString.js"),module.exports=Matrix},{"./get.js":334,"./iget.js":336,"./iset.js":339,"./mget.js":343,"./mset.js":345,"./set.js":353,"./sget.js":355,"./sset.js":357,"./toString.js":359}],332:[function(require,module){"use strict";function Matrix(data,dtype,shape,offset,strides){return this instanceof Matrix?(this.dtype=dtype,this.shape=shape,this.strides=strides,this.offset=offset,this.ndims=shape.length,this.length=data.length,this.nbytes=data.byteLength,this.data=data,this):new Matrix(data,dtype,shape,offset,strides)}Matrix.prototype.set=require("./set.raw.js"),Matrix.prototype.iset=require("./iset.raw.js"),Matrix.prototype.mset=require("./mset.raw.js"),Matrix.prototype.sset=require("./sset.raw.js"),Matrix.prototype.get=require("./get.raw.js"),Matrix.prototype.iget=require("./iget.raw.js"),Matrix.prototype.mget=require("./mget.raw.js"),Matrix.prototype.sget=require("./sget.raw.js"),Matrix.prototype.toString=require("./toString.js"),module.exports=Matrix},{"./get.raw.js":335,"./iget.raw.js":337,"./iset.raw.js":340,"./mget.raw.js":344,"./mset.raw.js":346,"./set.raw.js":354,"./sget.raw.js":356,"./sset.raw.js":358,"./toString.js":359}],333:[function(require,module){"use strict";var DTYPES=["int8","uint8","uint8_clamped","int16","uint16","int32","uint32","float32","float64"];module.exports=DTYPES},{}],334:[function(require,module){"use strict";function get(i,j){if(!isNonNegativeInteger(i)||!isNonNegativeInteger(j))throw new TypeError("invalid input argument. Indices must be nonnegative integers. Values: `["+i+","+j+"]`.");return this.data[this.offset+i*this.strides[0]+j*this.strides[1]]}var isNonNegativeInteger=require("validate.io-nonnegative-integer");module.exports=get},{"validate.io-nonnegative-integer":378}],335:[function(require,module){"use strict";function get(i,j){return this.data[this.offset+i*this.strides[0]+j*this.strides[1]]}module.exports=get},{}],336:[function(require,module){"use strict";function iget(idx){var r,j;if(!isInteger(idx))throw new TypeError("invalid input argument. Must provide a integer. Value: `"+idx+"`.");if(!(0>idx&&(idx+=this.length,0>idx)))return j=idx%this.strides[0],r=idx-j,this.strides[0]<0&&(r=-r),this.data[this.offset+r+j*this.strides[1]]}var isInteger=require("validate.io-integer-primitive");module.exports=iget},{"validate.io-integer-primitive":375}],337:[function(require,module){"use strict";function iget(idx){var r,j;if(!(0>idx&&(idx+=this.length,0>idx)))return j=idx%this.strides[0],r=idx-j,this.strides[0]<0&&(r=-r),this.data[this.offset+r+j*this.strides[1]]}module.exports=iget},{}],338:[function(require,module){"use strict";module.exports=require("./matrix.js"),module.exports.raw=require("./matrix.raw.js")},{"./matrix.js":341,"./matrix.raw.js":342}],339:[function(require,module){"use strict";function iset(idx,v){var r,j;if(!isInteger(idx))throw new TypeError("invalid input argument. An index must be an integer. Value: `"+idx+"`.");if(!isNumber(v)&&!isnan(v))throw new TypeError("invalid input argument. An input value must be a number primitive. Value: `"+v+"`.");return 0>idx&&(idx+=this.length,0>idx)?this:(j=idx%this.strides[0],r=idx-j,this.strides[0]<0&&(r=-r),this.data[this.offset+r+j*this.strides[1]]=v,this)}var isInteger=require("validate.io-integer-primitive"),isnan=require("validate.io-nan"),isNumber=require("validate.io-number-primitive");module.exports=iset},{"validate.io-integer-primitive":375,"validate.io-nan":376,"validate.io-number-primitive":381}],340:[function(require,module){"use strict";function iset(idx,v){var r,j;return 0>idx&&(idx+=this.length,0>idx)?this:(j=idx%this.strides[0],r=idx-j,this.strides[0]<0&&(r=-r),this.data[this.offset+r+j*this.strides[1]]=v,this)}module.exports=iset},{}],341:[function(require,module){"use strict";function matrix(){var dtype,ndims,shape,data,vFLG,len,dt,i;if(1===arguments.length?(shape=arguments[0],vFLG=2):2===arguments.length?isString(arguments[1])?(shape=arguments[0],dtype=arguments[1],vFLG=23):(data=arguments[0],shape=arguments[1],vFLG=12):(data=arguments[0],shape=arguments[1],dtype=arguments[2],vFLG=123),!isNonNegativeIntegerArray(shape))throw new TypeError("invalid input argument. A matrix shape must be an array of nonnegative integers. Value: `"+shape+"`.");if(ndims=shape.length,2!==ndims)throw new Error("invalid input argument. Shape must be a 2-element array. Value: `"+shape+"`.");if(123===vFLG||23===vFLG){if(!contains(DTYPES,dtype))throw new TypeError("invalid input argument. Unrecognized/unsupported data type. Value: `"+dtype+"`.")}else dtype="float64";for(len=1,i=0;ndims>i;i++)len*=shape[i];if(123===vFLG||12===vFLG){if(dt=getType(data),!contains(DTYPES,dt)&&!isArray(data))throw new TypeError("invalid input argument. Input data must be a valid type. Consult the documentation for a list of valid data types. Value: `"+data+"`.");if(len!==data.length)throw new Error("invalid input argument. Matrix shape does not match the input data length.");(123===vFLG&&dt!==dtype||"generic"===dt)&&(data=cast(data,dtype))}else data=new BTYPES[dtype](len);return new Matrix(data,dtype,shape,0,[shape[1],1])}var isString=require("validate.io-string-primitive"),isNonNegativeIntegerArray=require("validate.io-nonnegative-integer-array"),contains=require("validate.io-contains"),isArray=require("validate.io-array"),cast=require("compute-cast-arrays"),getType=require("compute-dtype"),Matrix=require("./ctor.js"),BTYPES=require("./btypes.js"),DTYPES=require("./dtypes.js");module.exports=matrix},{"./btypes.js":330,"./ctor.js":331,"./dtypes.js":333,"compute-cast-arrays":360,"compute-dtype":366,"validate.io-array":371,"validate.io-contains":372,"validate.io-nonnegative-integer-array":377,"validate.io-string-primitive":382}],342:[function(require,module){"use strict";function matrix(){var dtype,ndims,shape,data,len,i;if(1===arguments.length?shape=arguments[0]:2===arguments.length?isString(arguments[1])?(shape=arguments[0],dtype=arguments[1]):(data=arguments[0],shape=arguments[1]):(data=arguments[0],shape=arguments[1],dtype=arguments[2]),ndims=shape.length,2!==ndims)throw new Error("invalid input argument. Shape must be a 2-element array. Value: `"+shape+"`.");for(len=1,i=0;ndims>i;i++)len*=shape[i];if(data){if(!dtype&&(dtype=getType(data),!contains(DTYPES,dtype)))throw new TypeError("invalid input argument. Input data must be a valid type. Consult the documentation for a list of valid data types. Value: `"+data+"`.");if(len!==data.length)throw new Error("invalid input argument. Matrix shape does not match the input data length.")}else dtype||(dtype="float64"),data=new BTYPES[dtype](len);return new Matrix(data,dtype,shape,0,[shape[1],1])}var isString=require("validate.io-string-primitive"),contains=require("validate.io-contains"),getType=require("compute-dtype"),Matrix=require("./ctor.raw.js"),BTYPES=require("./btypes.js"),DTYPES=require("./dtypes.js");module.exports=matrix},{"./btypes.js":330,"./ctor.raw.js":332,"./dtypes.js":333,"compute-dtype":366,"validate.io-contains":372,"validate.io-string-primitive":382}],343:[function(require,module){"use strict";function mget(rows,cols){var nRows,nCols,out,sgn,d,s0,s1,s2,s3,o,r,dr,i,j,m,n;if(s0=this.strides[0],s1=this.strides[1],o=this.offset,arguments.length<2){if(!isNonNegativeIntegerArray(rows))throw new TypeError("invalid input argument. Linear indices must be specified as a nonnegative integer array. Value: `"+rows+"`.");for(i=[],n=0;n<rows.length;n++)rows[n]<this.length&&i.push(rows[n]);for(m=i.length,d=new BTYPES[this.dtype](m),out=new this.constructor(d,this.dtype,[1,m],0,[m,1]),sgn=0>s0?-1:1,n=0;m>n;n++)j=i[n]%s0,r=sgn*(i[n]-j),d[n]=this.data[o+r+j*s1]}else{if(nRows=this.shape[0],null===rows)for(i=new Array(nRows),n=0;nRows>n;n++)i[n]=n;else{if(!isNonNegativeIntegerArray(rows))throw new TypeError("invalid input argument. Row indices must be specified as a nonnegative integer array. Value: `"+rows+"`.");for(i=[],n=0;n<rows.length;n++)rows[n]<nRows&&i.push(rows[n])}if(nCols=this.shape[1],null===cols)for(j=new Array(nCols),n=0;nCols>n;n++)j[n]=n;else{if(!isNonNegativeIntegerArray(cols))throw new TypeError("invalid input argument. Column indices must be specified as a nonnegative integer array. Value: `"+cols+"`.");for(j=[],n=0;n<cols.length;n++)cols[n]<nCols&&j.push(cols[n])}for(nRows=i.length,nCols=j.length,d=new BTYPES[this.dtype](nRows*nCols),out=new this.constructor(d,this.dtype,[nRows,nCols],0,[nCols,1]),s2=out.strides[0],s3=out.strides[1],m=0;nRows>m;m++)for(r=o+i[m]*s0,dr=m*s2,n=0;nCols>n;n++)d[dr+n*s3]=this.data[r+j[n]*s1]}return out}var isNonNegativeIntegerArray=require("validate.io-nonnegative-integer-array"),BTYPES=require("./btypes.js");module.exports=mget},{"./btypes.js":330,"validate.io-nonnegative-integer-array":377}],344:[function(require,module){"use strict";function mget(rows,cols){var nRows,nCols,out,sgn,d,s0,s1,s2,s3,o,r,dr,i,j,m,n;if(s0=this.strides[0],s1=this.strides[1],o=this.offset,arguments.length<2)for(i=rows,m=i.length,d=new BTYPES[this.dtype](m),out=new this.constructor(d,this.dtype,[1,m],0,[m,1]),sgn=0>s0?-1:1,n=0;m>n;n++)j=i[n]%s0,r=sgn*(i[n]-j),d[n]=this.data[o+r+j*s1];else{if(null===rows)for(nRows=this.shape[0],i=new Array(nRows),n=0;nRows>n;n++)i[n]=n;else nRows=rows.length,i=rows;if(null===cols)for(nCols=this.shape[1],j=new Array(nCols),n=0;nCols>n;n++)j[n]=n;else nCols=cols.length,j=cols;for(d=new BTYPES[this.dtype](nRows*nCols),out=new this.constructor(d,this.dtype,[nRows,nCols],0,[nCols,1]),s2=out.strides[0],s3=out.strides[1],m=0;nRows>m;m++)for(r=o+i[m]*s0,dr=m*s2,n=0;nCols>n;n++)d[dr+n*s3]=this.data[r+j[n]*s1]}return out}var BTYPES=require("./btypes.js");module.exports=mget},{"./btypes.js":330}],345:[function(require,module){"use strict";function getIndices(idx,len){var out,i;if(null===idx)for(out=new Array(len),i=0;len>i;i++)out[i]=i;else{if(!isNonNegativeIntegerArray(idx))throw new TypeError("invalid input argument. Row and column indices must be arrays of nonnegative integers. Value: `"+idx+"`.");for(out=[],i=0;i<idx.length;i++)idx[i]<len&&out.push(idx[i])}return out}function mset(){var args,rows,cols,i,nargs=arguments.length;for(args=new Array(nargs),i=0;nargs>i;i++)args[i]=arguments[i];if(3>nargs){if(!isNonNegativeIntegerArray(args[0]))throw new TypeError("invalid input argument. First argument must be an array of nonnegative integers. Value: `"+args[0]+"`.");isFunction(args[1])?mset2(this,args[0],args[1]):isNumber(args[1])||isnan(args[1])?mset1(this,args[0],args[1]):mset3(this,args[0],args[1])}else if(3===nargs)if(isFunction(args[1])){if(!isNonNegativeIntegerArray(args[0]))throw new TypeError("invalid input argument. First argument must be an array of nonnegative integers. Value: `"+args[0]+"`.");mset2(this,args[0],args[1],args[2])}else isFunction(args[2])?(rows=getIndices(args[0],this.shape[0]),cols=getIndices(args[1],this.shape[1]),mset4(this,rows,cols,args[2],this)):isNumber(args[2])?(rows=getIndices(args[0],this.shape[0]),cols=getIndices(args[1],this.shape[1]),mset5(this,rows,cols,args[2])):(rows=getIndices(args[0],this.shape[0]),cols=getIndices(args[1],this.shape[1]),mset6(this,rows,cols,args[2]));else{if(!isFunction(args[2]))throw new TypeError("invalid input argument. Callback argument must be a function. Value: `"+args[2]+"`.");rows=getIndices(args[0],this.shape[0]),cols=getIndices(args[1],this.shape[1]),mset4(this,rows,cols,args[2],args[3])}return this}var isFunction=require("validate.io-function"),isnan=require("validate.io-nan"),isNumber=require("validate.io-number-primitive"),isNonNegativeIntegerArray=require("validate.io-nonnegative-integer-array"),mset1=require("./mset1.js"),mset2=require("./mset2.js"),mset3=require("./mset3.js"),mset4=require("./mset4.js"),mset5=require("./mset5.js"),mset6=require("./mset6.js");module.exports=mset},{"./mset1.js":347,"./mset2.js":348,"./mset3.js":349,"./mset4.js":350,"./mset5.js":351,"./mset6.js":352,"validate.io-function":374,"validate.io-nan":376,"validate.io-nonnegative-integer-array":377,
"validate.io-number-primitive":381}],346:[function(require,module){"use strict";function getIndices(idx,len){var out,i;if(null===idx)for(out=new Array(len),i=0;len>i;i++)out[i]=i;else out=idx;return out}function mset(){var args,rows,cols,i,nargs=arguments.length;for(args=new Array(nargs),i=0;nargs>i;i++)args[i]=arguments[i];return 3>nargs?"function"==typeof args[1]?mset2(this,args[0],args[1]):"number"==typeof args[1]?mset1(this,args[0],args[1]):mset3(this,args[0],args[1]):3===nargs?"function"==typeof args[1]?mset2(this,args[0],args[1],args[2]):"function"==typeof args[2]?(rows=getIndices(args[0],this.shape[0]),cols=getIndices(args[1],this.shape[1]),mset4(this,rows,cols,args[2],this)):"number"==typeof args[2]?(rows=getIndices(args[0],this.shape[0]),cols=getIndices(args[1],this.shape[1]),mset5(this,rows,cols,args[2])):(rows=getIndices(args[0],this.shape[0]),cols=getIndices(args[1],this.shape[1]),mset6(this,rows,cols,args[2])):(rows=getIndices(args[0],this.shape[0]),cols=getIndices(args[1],this.shape[1]),mset4(this,rows,cols,args[2],args[3])),this}var mset1=require("./mset1.js"),mset2=require("./mset2.js"),mset3=require("./mset3.js"),mset4=require("./mset4.js"),mset5=require("./mset5.js"),mset6=require("./mset6.js");module.exports=mset},{"./mset1.js":347,"./mset2.js":348,"./mset3.js":349,"./mset4.js":350,"./mset5.js":351,"./mset6.js":352}],347:[function(require,module){"use strict";function mset1(mat,idx,v){var sgn,r,j,n,s0=mat.strides[0],s1=mat.strides[1],len=idx.length,o=mat.offset;for(sgn=0>s0?-1:1,n=0;len>n;n++)j=idx[n]%s0,r=sgn*(idx[n]-j),mat.data[o+r+j*s1]=v}module.exports=mset1},{}],348:[function(require,module){"use strict";function mset2(mat,idx,clbk,ctx){var sgn,r,c,i,k,n,s0=mat.strides[0],s1=mat.strides[1],len=idx.length,o=mat.offset;for(sgn=0>s0?-1:1,n=0;len>n;n++)c=idx[n]%s0,i=sgn*(idx[n]-c),r=i/s0,k=o+i+c*s1,mat.data[k]=clbk.call(ctx,mat.data[k],r,c,k)}module.exports=mset2},{}],349:[function(require,module){"use strict";function mset3(mat,idx,m){var sgn0,sgn1,r0,r1,j0,j1,n,s0=mat.strides[0],s1=mat.strides[1],s2=m.strides[0],s3=m.strides[1],len=idx.length,o0=mat.offset,o1=m.offset;if(m.length!==len)throw new Error("invalid input argument. Number of indices does not match the number of elements in the value matrix.");for(sgn0=0>s0?-1:1,sgn1=0>s2?-1:1,n=0;len>n;n++)j0=idx[n]%s0,r0=sgn0*(idx[n]-j0),j1=n%s2,r1=sgn1*(n-j1),mat.data[o0+r0+j0*s1]=m.data[o1+r1+j1*s3]}module.exports=mset3},{}],350:[function(require,module){"use strict";function mset4(mat,rows,cols,clbk,ctx){var r,i,j,k,s0=mat.strides[0],s1=mat.strides[1],nRows=rows.length,nCols=cols.length,o=mat.offset;for(i=0;nRows>i;i++)for(r=o+rows[i]*s0,j=0;nCols>j;j++)k=r+cols[j]*s1,mat.data[k]=clbk.call(ctx,mat.data[k],rows[i],cols[j],k)}module.exports=mset4},{}],351:[function(require,module){"use strict";function mset5(mat,rows,cols,v){var r,i,j,s0=mat.strides[0],s1=mat.strides[1],nRows=rows.length,nCols=cols.length,o=mat.offset;for(i=0;nRows>i;i++)for(r=o+rows[i]*s0,j=0;nCols>j;j++)mat.data[r+cols[j]*s1]=v}module.exports=mset5},{}],352:[function(require,module){"use strict";function mset6(mat,rows,cols,m){var r0,r1,i,j,s0=mat.strides[0],s1=mat.strides[1],s2=m.strides[0],s3=m.strides[1],nRows=rows.length,nCols=cols.length,o0=mat.offset,o1=m.offset;if(m.shape[0]!==nRows||m.shape[1]!==nCols)throw new Error("invalid input argument. The dimensions given by the row and column indices do not match the value matrix dimensions.");for(i=0;nRows>i;i++)for(r0=o0+rows[i]*s0,r1=o1+i*s2,j=0;nCols>j;j++)mat.data[r0+cols[j]*s1]=m.data[r1+j*s3]}module.exports=mset6},{}],353:[function(require,module){"use strict";function set(i,j,v){if(!isNonNegativeInteger(i)||!isNonNegativeInteger(j))throw new TypeError("invalid input argument. Row and column indices must be nonnegative integers. Values: `["+i+","+j+"]`.");if(!isNumber(v)&&!isnan(v))throw new TypeError("invalid input argument. An input value must be a number primitive. Value: `"+v+"`.");return i=this.offset+i*this.strides[0]+j*this.strides[1],i>=0&&(this.data[i]=v),this}var isNonNegativeInteger=require("validate.io-nonnegative-integer"),isnan=require("validate.io-nan"),isNumber=require("validate.io-number-primitive");module.exports=set},{"validate.io-nan":376,"validate.io-nonnegative-integer":378,"validate.io-number-primitive":381}],354:[function(require,module){"use strict";function set(i,j,v){return i=this.offset+i*this.strides[0]+j*this.strides[1],i>=0&&(this.data[i]=v),this}module.exports=set},{}],355:[function(require,module){"use strict";function sget(seq){var nRows,nCols,rows,cols,seqs,mat,len,s0,s1,o,d,r,dr,i,j;if(!isString(seq))throw new TypeError("invalid input argument. Must provide a string primitive. Value: `"+seq+"`.");if(seqs=seq.split(","),2!==seqs.length)throw new Error("invalid input argument. Subsequence string must specify row and column subsequences. Value: `"+seq+"`.");if(rows=ispace(seqs[0],this.shape[0]),cols=ispace(seqs[1],this.shape[1]),nRows=rows.length,nCols=cols.length,len=nRows*nCols,d=new BTYPES[this.dtype](len),mat=new this.constructor(d,this.dtype,[nRows,nCols],0,[nCols,1]),len)for(s0=this.strides[0],s1=this.strides[1],o=this.offset,i=0;nRows>i;i++)for(r=o+rows[i]*s0,dr=i*nCols,j=0;nCols>j;j++)d[dr+j]=this.data[r+cols[j]*s1];return mat}var isString=require("validate.io-string-primitive"),ispace=require("compute-indexspace"),BTYPES=require("./btypes.js");module.exports=sget},{"./btypes.js":330,"compute-indexspace":370,"validate.io-string-primitive":382}],356:[function(require,module){"use strict";function sget(seq){var nRows,nCols,rows,cols,seqs,mat,len,s0,s1,o,d,r,dr,i,j;if(seqs=seq.split(","),rows=ispace(seqs[0],this.shape[0]),cols=ispace(seqs[1],this.shape[1]),nRows=rows.length,nCols=cols.length,len=nRows*nCols,d=new BTYPES[this.dtype](len),mat=new this.constructor(d,this.dtype,[nRows,nCols],0,[nCols,1]),len)for(s0=this.strides[0],s1=this.strides[1],o=this.offset,i=0;nRows>i;i++)for(r=o+rows[i]*s0,dr=i*nCols,j=0;nCols>j;j++)d[dr+j]=this.data[r+cols[j]*s1];return mat}var ispace=require("compute-indexspace"),BTYPES=require("./btypes.js");module.exports=sget},{"./btypes.js":330,"compute-indexspace":370}],357:[function(require,module){"use strict";function sset(seq,val,thisArg){var nRows,nCols,clbk,rows,cols,seqs,mat,ctx,s0,s1,s2,s3,o0,o1,r0,r1,i,j,k;if(!isString(seq))throw new TypeError("invalid input argument. Must provide a string primitive. Value: `"+seq+"`.");if(seqs=seq.split(","),2!==seqs.length)throw new Error("invalid input argument. Subsequence string must specify row and column subsequences. Value: `"+seq+"`.");if(isFunction(val)?clbk=val:isNumber(val)||(mat=val),rows=ispace(seqs[0],this.shape[0]),cols=ispace(seqs[1],this.shape[1]),nRows=rows.length,nCols=cols.length,!nRows||!nCols)return this;if(s0=this.strides[0],s1=this.strides[1],o0=this.offset,clbk)for(ctx=arguments.length>2?thisArg:this,i=0;nRows>i;i++)for(r0=o0+rows[i]*s0,j=0;nCols>j;j++)k=r0+cols[j]*s1,this.data[k]=clbk.call(ctx,this.data[k],rows[i],cols[j],k);else if(mat){if(nRows!==mat.shape[0])throw new Error("invalid input arguments. Row subsequence does not match input matrix dimensions. Expected a ["+nRows+","+nCols+"] matrix and instead received a ["+mat.shape.join(",")+"] matrix.");if(nCols!==mat.shape[1])throw new Error("invalid input arguments. Column subsequence does not match input matrix dimensions. Expected a ["+nRows+","+nCols+"] matrix and instead received a ["+mat.shape.join(",")+"] matrix.");for(s2=mat.strides[0],s3=mat.strides[1],o1=mat.offset,i=0;nRows>i;i++)for(r0=o0+rows[i]*s0,r1=o1+i*s2,j=0;nCols>j;j++)this.data[r0+cols[j]*s1]=mat.data[r1+j*s3]}else for(i=0;nRows>i;i++)for(r0=o0+rows[i]*s0,j=0;nCols>j;j++)this.data[r0+cols[j]*s1]=val;return this}var isString=require("validate.io-string-primitive"),isNumber=require("validate.io-number-primitive"),isFunction=require("validate.io-function"),ispace=require("compute-indexspace");module.exports=sset},{"compute-indexspace":370,"validate.io-function":374,"validate.io-number-primitive":381,"validate.io-string-primitive":382}],358:[function(require,module){"use strict";function sset(seq,val,thisArg){var nRows,nCols,clbk,rows,cols,seqs,mat,ctx,s0,s1,s2,s3,o0,o1,r0,r1,i,j,k;if(seqs=seq.split(","),"function"==typeof val?clbk=val:"number"!=typeof val&&(mat=val),rows=ispace(seqs[0],this.shape[0]),cols=ispace(seqs[1],this.shape[1]),nRows=rows.length,nCols=cols.length,!nRows||!nCols)return this;if(s0=this.strides[0],s1=this.strides[1],o0=this.offset,clbk)for(ctx=arguments.length>2?thisArg:this,i=0;nRows>i;i++)for(r0=o0+rows[i]*s0,j=0;nCols>j;j++)k=r0+cols[j]*s1,this.data[k]=clbk.call(ctx,this.data[k],rows[i],cols[j],k);else if(mat){if(nRows!==mat.shape[0])throw new Error("invalid input arguments. Row subsequence does not match input matrix dimensions. Expected a ["+nRows+","+nCols+"] matrix and instead received a ["+mat.shape.join(",")+"] matrix.");if(nCols!==mat.shape[1])throw new Error("invalid input arguments. Column subsequence does not match input matrix dimensions. Expected a ["+nRows+","+nCols+"] matrix and instead received a ["+mat.shape.join(",")+"] matrix.");for(s2=mat.strides[0],s3=mat.strides[1],o1=mat.offset,i=0;nRows>i;i++)for(r0=o0+rows[i]*s0,r1=o1+i*s2,j=0;nCols>j;j++)this.data[r0+cols[j]*s1]=mat.data[r1+j*s3]}else for(i=0;nRows>i;i++)for(r0=o0+rows[i]*s0,j=0;nCols>j;j++)this.data[r0+cols[j]*s1]=val;return this}var ispace=require("compute-indexspace");module.exports=sset},{"compute-indexspace":370}],359:[function(require,module){"use strict";function toString(){var o,i,j,nRows=this.shape[0],nCols=this.shape[1],s0=this.strides[0],s1=this.strides[1],m=nRows-1,n=nCols-1,str="";for(i=0;nRows>i;i++){for(o=this.offset+i*s0,j=0;nCols>j;j++)str+=this.data[o+j*s1],n>j&&(str+=",");m>i&&(str+=";")}return str}module.exports=toString},{}],360:[function(require,module){"use strict";function cast(x,type){var ctor,len,d,i;if(!arrayLike(x))throw new TypeError("cast()::invalid input argument. First argument must be an array-like object. Value: `"+x+"`.");if(ctor="string"==typeof type?CTORS[type]:CTORS[DTYPES[typeName(type)]],void 0===ctor)throw new Error("cast()::invalid input argument. Unrecognized/unsupported type to which to cast. Value: `"+type+"`.");for(len=x.length,d=new ctor(len),i=0;len>i;i++)d[i]=x[i];return d}var arrayLike=require("validate.io-array-like"),typeName=require("type-name"),DTYPES=require("compute-array-dtype/lib/dtypes"),CTORS=require("compute-array-constructors/lib/ctors");module.exports=cast},{"compute-array-constructors/lib/ctors":361,"compute-array-dtype/lib/dtypes":362,"type-name":363,"validate.io-array-like":364}],361:[function(require,module){"use strict";var CTORS={int8:Int8Array,uint8:Uint8Array,uint8_clamped:Uint8ClampedArray,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,float32:Float32Array,float64:Float64Array,generic:Array};module.exports=CTORS},{}],362:[function(require,module){"use strict";var DTYPES={Int8Array:"int8",Uint8Array:"uint8",Uint8ClampedArray:"uint8_clamped",Int16Array:"int16",Uint16Array:"uint16",Int32Array:"int32",Uint32Array:"uint32",Float32Array:"float32",Float64Array:"float64",Array:"generic"};module.exports=DTYPES},{}],363:[function(require,module,exports){arguments[4][58][0].apply(exports,arguments)},{dup:58}],364:[function(require,module){"use strict";function isArrayLike(value){return void 0!==value&&null!==value&&"function"!=typeof value&&isInteger(value.length)&&value.length>=0&&value.length<=MAX}var isInteger=require("validate.io-integer-primitive"),MAX=require("compute-const-max-safe-integer");module.exports=isArrayLike},{"compute-const-max-safe-integer":365,"validate.io-integer-primitive":375}],365:[function(require,module){"use strict";module.exports=9007199254740991},{}],366:[function(require,module){"use strict";function dtype(value){var type,dt;if(null===value)return"null";switch(type=typeof value){case"undefined":case"boolean":case"number":case"string":case"function":case"symbol":return type}return type=typeName(value),dt=getType(type),dt?dt:"Buffer"===type||"ArrayBuffer"===type?"binary":"generic"}var typeName=require("type-name"),getType=require("compute-array-dtype");module.exports=dtype},{"compute-array-dtype":368,"type-name":369}],367:[function(require,module,exports){arguments[4][362][0].apply(exports,arguments)},{dup:362}],368:[function(require,module){"use strict";function getType(name){return DTYPES[name]||null}var DTYPES=require("./dtypes.js");module.exports=getType},{"./dtypes.js":367}],369:[function(require,module,exports){arguments[4][58][0].apply(exports,arguments)},{dup:58}],370:[function(require,module,exports){arguments[4][130][0].apply(exports,arguments)},{dup:130,"validate.io-nonnegative-integer":378,"validate.io-string-primitive":382}],371:[function(require,module,exports){arguments[4][22][0].apply(exports,arguments)},{dup:22}],372:[function(require,module){"use strict";function contains(arr,value){var len,i;if(!isArray(arr))throw new TypeError("contains()::invalid input argument. First argument must be an array. Value: `"+arr+"`.");if(len=arr.length,isnan(value)){for(i=0;len>i;i++)if(isnan(arr[i]))return!0;return!1}for(i=0;len>i;i++)if(arr[i]===value)return!0;return!1}var isArray=require("validate.io-array"),isnan=require("validate.io-nan-primitive");module.exports=contains},{"validate.io-array":371,"validate.io-nan-primitive":373}],373:[function(require,module){"use strict";function nan(value){return"number"==typeof value&&value!==value}module.exports=nan},{}],374:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{dup:26}],375:[function(require,module){"use strict";function isInteger(value){return isNumber(value)&&value%1===0}var isNumber=require("validate.io-number-primitive");module.exports=isInteger},{"validate.io-number-primitive":381}],376:[function(require,module){"use strict";function nan(value){return("number"==typeof value||"[object Number]"===Object.prototype.toString.call(value))&&value.valueOf()!==value.valueOf()}module.exports=nan},{}],377:[function(require,module){"use strict";function isNonNegativeIntegerArray(value){var len;if(!isArray(value))return!1;if(len=value.length,!len)return!1;for(var i=0;len>i;i++)if(!isNonNegativeInteger(value[i]))return!1;return!0}var isArray=require("validate.io-array"),isNonNegativeInteger=require("validate.io-nonnegative-integer");module.exports=isNonNegativeIntegerArray},{"validate.io-array":371,"validate.io-nonnegative-integer":378}],378:[function(require,module,exports){arguments[4][62][0].apply(exports,arguments)},{dup:62,"validate.io-integer":379}],379:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4,"validate.io-number":380}],380:[function(require,module,exports){arguments[4][5][0].apply(exports,arguments)},{dup:5}],381:[function(require,module,exports){arguments[4][80][0].apply(exports,arguments)},{dup:80}],382:[function(require,module,exports){arguments[4][82][0].apply(exports,arguments)},{dup:82}]},{},[1]);